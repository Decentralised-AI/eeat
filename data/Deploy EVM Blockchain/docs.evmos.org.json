{
    "summary": "Skip to main content\n\n **Evmos Docs**DevelopValidateProtocol\n\nToolsNetworksApp\n\nSearch```K`\n\n  * Getting Started\n  * Smart Contracts\n\n    * EVM Extensions\n\n    * List of EVM Extensions\n    * Outposts\n  * Oracles\n  * Block Explorers\n  * Graph Indexers\n  * Wallet Integration\n  * Faucet\n  * Testnet\n  * Mainnet\n  * API\n\n  * Other Tools\n\n  *   * Smart Contracts\n\nOn this page\n\n# Smart Contracts\n\nSince the introduction of Ethereum in 2015, the ability to control digital\nassets through smart contracts has attracted a large community of developers\nto build decentralized applications on the Ethereum Virtual Machine (EVM).\nThis community is continuously creating extensive tooling and introducing\nstandards, which are further increasing the adoption rate of EVM-compatible\ntechnology.\n\nWhether you are building new use cases on Evmos or porting an existing dApp\nfrom another EVM-based chain (e.g. Ethereum), you can easily build and deploy\nEVM smart contracts on Evmos to implement the core business logic of your\ndApp. Evmos is fully compatible with the EVM, so it allows you to use the same\ntools (Solidity, Remix, Oracles, etc.) and APIs (i.e. Ethereum JSON-RPC) that\nare available on the EVM.\n\nLeveraging the interoperability of Cosmos chains, Evmos enables you to build\nscalable cross-chain applications within a familiar EVM environment. Learn\nabout the essential components when building and deploying EVM smart contracts\non Evmos below.\n\n## Build with Solidity\u200b\n\nYou can develop EVM smart contracts on Evmos using Solidity. Solidity is also\nused to build smart contracts on Ethereum. So if you have deployed smart\ncontracts on Ethereum (or any other EVM-compatible chain) you can use the same\ncontracts on Evmos.\n\nSince it is the most widely used smart contract programming language in\nBlockchain, Solidity comes with well-documented and rich language support.\nHead over to our list of Tools and IDE Plugins to help you get started.\n\n### EVM Extensions\u200b\n\nEVM Extensions are precompiled contracts that are built into the Ethereum\nVirtual Machine (EVM). Each offers specific functionality, that can be used by\nother smart contracts. Generally, they are used to perform operations that are\neither not possible or would be too expensive to perform with a regular smart\ncontract implementation, such as hashing, elliptic curve cryptography, and\nmodular exponentiation.\n\nBy adding custom EVM extensions to Ethereum's basic feature set, Evmos allows\ndevelopers to use previously unavailable functionality in smart contracts,\nlike staking and governance operations. This will allow more complex smart\ncontracts to be built on Evmos and further improves the interoperability\nbetween Cosmos and Ethereum. It also is a key feature to achieve Evmos' vision\nof being the definitive dApp chain, where any dApp can be deployed once and\nusers can interact with a wide range of different blockchains natively.\n\nTo enable the described functionalities, Evmos introduces so-called _stateful_\nprecompiled smart contracts, which can perform a state transition, as opposed\nto those offered by the standard Go-Ethereum implementation, which can only\nread state information. This is necessary because an operation like e.g.\nstaking tokens will ultimately change the chain state.\n\nView a list of available evm extensions here.\n\n### Oracles\u200b\n\nBlockchain oracles provide a way for smart contracts to access external\ninformation, such as price feeds from financial exchanges or carbon emission\nmeasurements. They serve as bridges between blockchains and the outside world.\n\nHead over to our Oracles section to find out how smart contracts can make use\nof oracles on Evmos for real-life activities such as insurance, borrowing,\nlending, or gaming.\n\n## Deploy with Ethereum JSON-RPC\u200b\n\nEvmos is fully compatible with the Ethereum JSON-RPC APIs, allowing you to\ndeploy and interact with smart contracts on Evmos and connect with existing\nEthereum-compatible web3 tooling. This gives you direct access to reading\nEthereum-formatted transactions or sending them to the network which otherwise\nwouldn't be possible on a Cosmos chain, such as Evmos.\n\nYou can connect to the Evmos Testnet to deploy and test your smart contracts\nbefore moving to Mainnet.\n\n### Block Explorers\u200b\n\nYou can use block explorers to view and debug interactions with your smart\ncontracts deployed on Evmos. Block explorers index blocks and their\ntransactions so that you can search for real-time and historical information\nabout the blockchain, including data related to blocks, transactions,\naddresses, and more.\n\n### Contract Verification\u200b\n\nOnce deployed, smart contract data is deployed as non-human readable EVM\nbytecode. You can use contract verification tools that publish and verify your\noriginal Solidity code to prove to users that they are interacting with the\ncorrect smart contract.\n\n## Evmos Features\u200b\n\nThe core protocol team is continuously building features that enhance the\nexperience of smart contract developers on Evmos. Head over to our Mainnet\nsections to learn more about these functionalities, e.g. how to earn revenue\nwith your smart contract or register your ERC-20 token to be used cross-chain.\n\nEdit this page\n\nPrevious\n\nGetting Started\n\nNext\n\nEVM Extensions\n\n  * Build with Solidity\n    * EVM Extensions\n    * Oracles\n  * Deploy with Ethereum JSON-RPC\n    * Block Explorers\n    * Contract Verification\n  * Evmos Features\n\nDocs\n\n  * Build a Dapp\n  * Contribute to Evmos\n  * Become a Validator\n\nCommunity\n\n  * Telegram\n  * Discord\n  * Twitter\n\nMore\n\n  * Blog\n  * Evmos GitHub\n\nBuilt with \u2764\ufe0f by the Evmos Core Development Team. \u00a9 2024 All rights reserved.\n\n",
    "links": "[{\"link\": \"https://docs.evmos.org/\", \"text\": \"\"}, {\"link\": \"https://docs.evmos.org/develop\", \"text\": \"Develop\"}, {\"link\": \"https://docs.evmos.org/validate\", \"text\": \"Validate\"}, {\"link\": \"https://docs.evmos.org/protocol\", \"text\": \"Protocol\"}, {\"link\": \"https://docs.evmos.org/develop/tools\", \"text\": \"Tools\"}, {\"link\": \"https://docs.evmos.org/develop/api/networks\", \"text\": \"Networks\"}, {\"link\": \"https://docs.evmos.org/develop\", \"text\": \"Getting Started\"}, {\"link\": \"https://docs.evmos.org/develop/smart-contracts\", \"text\": \"Smart Contracts\"}, {\"link\": \"https://docs.evmos.org/develop/smart-contracts/evm-extensions\", \"text\": \"EVM Extensions\"}, {\"link\": \"https://docs.evmos.org/develop/smart-contracts/list-evm-extensions\", \"text\": \"List of EVM Extensions\"}, {\"link\": \"https://docs.evmos.org/develop/smart-contracts/outposts\", \"text\": \"Outposts\"}, {\"link\": \"https://docs.evmos.org/develop/oracles\", \"text\": \"Oracles\"}, {\"link\": \"https://docs.evmos.org/develop/block-explorers\", \"text\": \"Block Explorers\"}, {\"link\": \"https://docs.evmos.org/develop/graphs-indexers\", \"text\": \"Graph Indexers\"}, {\"link\": \"https://docs.evmos.org/develop/wallet-integration\", \"text\": \"Wallet Integration\"}, {\"link\": \"https://docs.evmos.org/develop/faucet\", \"text\": \"Faucet\"}, {\"link\": \"https://docs.evmos.org/develop/testnet\", \"text\": \"Testnet\"}, {\"link\": \"https://docs.evmos.org/develop/mainnet\", \"text\": \"Mainnet\"}, {\"link\": \"https://docs.evmos.org/develop/api\", \"text\": \"API\"}, {\"link\": \"https://docs.evmos.org/develop/tools\", \"text\": \"Other Tools\"}, {\"link\": \"https://docs.evmos.org/\", \"text\": \"\"}, {\"link\": \"https://docs.evmos.org/develop/smart-contracts/list-evm-extensions\", \"text\": \"here\"}, {\"link\": \"https://docs.evmos.org/develop/oracles\", \"text\": \"Oracles section\"}, {\"link\": \"https://docs.evmos.org/develop/api/ethereum-json-rpc\", \"text\": \"Ethereum JSON-RPC\"}, {\"link\": \"https://docs.evmos.org/develop/testnet\", \"text\": \"Testnet\"}, {\"link\": \"https://docs.evmos.org/develop/block-explorers\", \"text\": \"block explorers\"}, {\"link\": \"https://docs.evmos.org/develop/tools/contract-verifications\", \"text\": \"contract verification tools\"}, {\"link\": \"https://docs.evmos.org/develop/mainnet#revenue\", \"text\": \"revenue\"}, {\"link\": \"https://docs.evmos.org/develop/mainnet#token-registration\", \"text\": \"register your ERC-20\"}, {\"link\": \"https://docs.evmos.org/develop\", \"text\": \"\"}, {\"link\": \"https://docs.evmos.org/develop/smart-contracts/evm-extensions\", \"text\": \"\"}, {\"link\": \"https://docs.evmos.org/develop/smart-contracts\", \"text\": \"Build a Dapp\"}, {\"link\": \"https://docs.evmos.org/validate\", \"text\": \"Become a Validator\"}]"
}