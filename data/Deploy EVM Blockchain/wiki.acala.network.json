{
    "summary": "Acala Wiki\n\nV1.2.0, English\n\nLearnBuildMaintain\n\nSearch\n\n\u2303K\n\nLinks\n\nAcala & Karura Wiki\n\nAcala 2.0\n\nOverview\n\nExecution Roadmap\n\naUSD SEED (aSEED)\n\nACA\n\nUniversal Asset Hub (UAH)\n\nEuphrates DApp\n\nLearn\n\nAcala Introduction\n\nTrilogy Networks\n\nFlexible Fees\n\nGovernance Overivew\n\nTreasury\n\nAcala EVM+\n\nGet started\n\nAcala Network\n\nKarura Network\n\nMandala Testnet\n\nIntegrate\n\nAcala Network\n\nKarura Network\n\nBuild\n\nEVM+ documentation\n\nSDKs\n\nGuides\n\nBuild DApps\n\nDeploy Ecosystem Modules\n\nComposable Chains\n\nOpen-Web3-Stack & ORML\n\nSmart Contracts\n\nAcala EVM Overview\n\nGet Started\n\nConnect to a Node\n\nSetup EVM Account\n\nPolkadot Explorer\n\nEVM Playground\n\nUse Remix\n\nUse Waffle\n\nUse Hardhat\n\nDeploy Contracts\n\nAdvanced\n\nAcala EVM Hacker Guide\n\nTools\n\nIndexers\n\nMiscellaneous\n\nCross Chain DeFi\n\nEcosystem\n\nGeneral Info\n\nAlliance\n\nCommunity\n\nContribution & Rewards\n\nEcosystem\n\nMedia Kits\n\nCrowdloans\n\nWhat are crowdloans\n\nAcala Crowdloan\n\nKarura Crowdloan\n\nMisc\n\naUSD Incident\n\nContributing\n\nGlossary\n\nPowered By GitBook\n\n# Deploy Contracts\n\nThe `Acala EVM Playground` is useful to test various functionalities of Acala\nEVM. It\u2019s a fork from parity `canvas-ui`.\n\n##\n\n **1\\. Setup**\n\nTo deploy your smart contract you can use our testnet or you can run your\nlocal dev node.\n\n###\n\nRun your own development network\n\nTo run your own development network, you can follow the instructions on\nsetting up your own development network in the official EVM+ documentation.\n\nOnce your development network is operational, you can connect your EVM wallet\nto it by using the following parameters:\n\n **Name**\n\n|\n\nMandala  \n  \n---|---  \n  \n **URL**\n\n|\n\n`http://127.0.0.1:8545`  \n  \n **Chain ID**\n\n|\n\n595  \n  \n **WS endpoint URL**\n\n|\n\n`ws://127.0.0.1:9944`  \n  \n **Symbol**\n\n|\n\nACA  \n  \nYou can reference the instructions on how to connect MetaMask to the EVM+ and\nsubstitute the values from instructions with the values from above.\n\nAfter your EVM wallet is connected to the Acala EVM+, you can continue to the\nEVM playground.\n\n###\n\n **Deploy to our test network**\n\nTo deploy to our test network you need to have the polkadot{.js} wallet\nextension installed in your browser.\n\nOnce you have the extension installed, you can bind your accounts with an EVM\naddress and get test network funds from the Discord faucet.\n\n **Note:** For the remainder of this page we will assume you are using a local\ndevelopment network. If you are deploying to the test network.\n\n##\n\n **2\\. Upload Contract ABI & bytecode**\n\nTo deploy a smart contract using EVM playgrounds, you need to compile your\nsmart contract in your preferred development framework so that you have the\nABI bundle available to upload.\n\nHow to create an `ExampleToken` ABI bundle\n\nIn case you want to use the same smart contract as it is used in this example,\nyou can follow these short instructions on how to create it.\n\nFirst clone the Acala Hardhat tutorials example:\n\ngit clone git@github.com:AcalaNetwork/hardhat-tutorials.git\n\nMove into the examples repository and into the `token` example:\n\ncd hardhat-tutorials/token\n\nWithin the example directory, install all of the dependencies and compile the\nsmart contracts:\n\nyarn && yarn build\n\nThis will compile the `Token` smart contract and create an ABI bundle to the\ndirectory `artifacts/contracts/Token.sol/` the bundle file is called\n`Token.json`.\n\nUpload `ExampleToken` ABI & bytecode file by navigating to\nhttps://evm.acala.network/.\n\nGo to the `Upload` tab.\n\nEVM playground => Upload\n\nAssign the `Name` of your smart contract. You will be able to identify the\nsmart contract in the `Deploy` tab with it, once it gets uploaded.\n\nTo upload the ABI bundle itself, you can either drag and drop it into the\nupload section, or click on the section and select the file.\n\nEVM playgrounds => Upload => Add file\n\nOnce you have selected the correct ABI bundle, the methods of the smart\ncontract should be displayed. You can verify that the correct methods are\nlisted and press `Upload` to upload the ABI bundle.\n\n##\n\n **3\\. Deploy the Contract**\n\nSmart contracts can be deployed under the Deploy tab of the EVM playgrounds.\n\nThe ABI bundles that you uploaded in the `Upload` tab can be seen here:\n\nEVM playgrounds => Deploy\n\nThe methods available for an ABI bundle can be seen by expanding the `ABI`\nmenu. This can be helpful if you have multiple bundles uploaded and you want\nto be sure that you will be interacting with the right one.\n\nEVM playgrounds => Deploy => Expand ABI section\n\nWhen you have verified that you are interacting with the ABI bundle that has\nthe correct methods available, you can click `Deploy`, which should open a\ndeployment interface:\n\nEVM playgrounds => Deploy => Deploy selected ABI bundle\n\nThe interface consists of the following components:\n\n  * Button to connect to your EVM wallet (this is why connecting MetaMask to the EVM+ is a prerequisite for this entry)\n\n  * Smart contract name, that can be changed, so you can deploy the same ABI bundle multiple times and easily differentiate between them\n\n  * ABI bundle identifications\n\n  * Fields to input the smart contract constructor parameters\n\n  * Value field to determine wether to send some of the native currency with the deploy transaction\n\n  * Fields to override the `gas parameters`\u200b\n\n  * `Deploy` button to deploy the smart contract once you are satisfied with the deployment parameters\n\n###\n\n1\\. Connect your EVM wallet\n\nPressing the\n\nbutton will prompt your EVM wallet to connect to the site. You can select the\naccount that you want to use with the EVM playgrounds and connect it.\n\n\u200b\n\n\u200b\n\n\u200b\n\nThe selected account should be displayed at the top of the page now:\n\nDisplayed deployment account\n\n###\n\n2\\. Update the required deployment parameters\n\nDepending on the requirements, you can modify the deployment parameters of\nyour smart contract. It is required to fill out the constructor parameters,\nbut modifying other values is optional.\n\nFilled out deployment values\n\nOnce the values are filled out and double checked, the smart contract is ready\nto be deployed.\n\nThe `validUntil` field value has to be higher than the current block number,\nor the deployment transaction will fail, due to the validator treating it as\noutdated. You can verify the current block number in a block explorer.\n\n###\n\n3\\. Deploy the smart contract\n\nOnce the parameters of deployment are ready, you can deploy the smart contract\nby pressing the `Deploy` button. This should prompt your EVM wallet to confirm\nyour deployment transaction:\n\nConfirming the deployment transaction\n\nOnce the transaction is included in a block, the deployed smart contract can\nbe found under `Execute` tab.\n\n##\n\n **4\\. Interact with the Contract**\n\nNavigate to the `Execute` tab. Find the deployed `ExampleToken` contract and\nClick the `Execute` button on the bottom of the \"ExampleToken\" box.\n\n##\n\n **5\\. Query Balances**\n\nTo perform a query on an account's balance, do the following steps:\n\n  1. 1.\n\nMake sure that the account you used to deploy the smart contract is connected\nto the `EVM playgrounds`.\n\n  2. 2.\n\nPick `balanceOf` from the `Message to Send` dropdown.\n\n  3. 3.\n\nCopy and paste the address of the account that you used to deploy the smart\ncontract to the `account: address` input.\n\nFilled out balance query\n\n **Note:** Solidity smart contracts have two types of methods: `views` and\n`executable` methods.\n\n  * `Views` are used to query information from the blockchain without writing data to it. `Views` transactions are free. The Playground uses the `Call` button to indicate this.\n\n  * `Executable` methods can write data onto the blockchain, and these transactions aren\u2019t free. Click the `Execute` button to execute it.\n\nFinally, click `Call` at the bottom, and `Call results` should show the\nExampleToken balance of `123456789`.\n\nCompleted balance query\n\n##\n\n **6\\. Transfer**\n\nNow let's try transferring ExampleTokens to another account.\n\n  1. 1.\n\nMake sure that the deployer account is connected to the EVM playgrounds.\n\n  2. 2.\n\nSelect `transfer` from the `Message to Send` dropdown.\n\n  3. 3.\n\nFill out the `recipient address` input box with another EVM address to which\nto send the tokens.\n\n  4. 4.\n\nEnter transfer amount in the `amount: unit256` argument box, note the token\nhas a standard 18 decimals.\n\n  5. 5.\n\nClick `Execute`.\n\nFilled out token transaction\n\nA notification will pop-up to confirm that the transaction is successfully\nexecuted.\n\nNow you can check the balances of both of the accounts, and confirm that they\nhave changed. deployer's account:\n\nDeployer's balance\n\nOther account:\n\nOther account's balance\n\nPrevious\n\nUse Hardhat\n\nNext\n\nAdvanced\n\nLast modified 1yr ago\n\nWas this page helpful?\n\nOn this page\n\n1\\. Setup\n\nRun your own development network\n\nDeploy to our test network\n\n2\\. Upload Contract ABI & bytecode\n\n3\\. Deploy the Contract\n\n1\\. Connect your EVM wallet\n\n2\\. Update the required deployment parameters\n\n3\\. Deploy the smart contract\n\n4\\. Interact with the Contract\n\n5\\. Query Balances\n\n6\\. Transfer\n\nTo pick up a draggable item, press the space bar. While dragging, use the\narrow keys to move the item. Press space again to drop the item in its new\nposition, or press escape to cancel.\n\nClose\n\nV1.2.0, English\n\nAcala & Karura Wiki\n\nAcala 2.0\n\nOverview\n\nExecution Roadmap\n\naUSD SEED (aSEED)\n\nACA\n\nUniversal Asset Hub (UAH)\n\nEuphrates DApp\n\nLearn\n\nAcala Introduction\n\nTrilogy Networks\n\nFlexible Fees\n\nGovernance Overivew\n\nTreasury\n\nAcala EVM+\n\nGet started\n\nAcala Network\n\nKarura Network\n\nMandala Testnet\n\nIntegrate\n\nAcala Network\n\nKarura Network\n\nBuild\n\nEVM+ documentation\n\nSDKs\n\nGuides\n\nBuild DApps\n\nDeploy Ecosystem Modules\n\nComposable Chains\n\nOpen-Web3-Stack & ORML\n\nSmart Contracts\n\nAcala EVM Overview\n\nGet Started\n\nConnect to a Node\n\nSetup EVM Account\n\nPolkadot Explorer\n\nEVM Playground\n\nUse Remix\n\nUse Waffle\n\nUse Hardhat\n\nDeploy Contracts\n\nAdvanced\n\nAcala EVM Hacker Guide\n\nTools\n\nIndexers\n\nMiscellaneous\n\nCross Chain DeFi\n\nEcosystem\n\nGeneral Info\n\nAlliance\n\nCommunity\n\nContribution & Rewards\n\nEcosystem\n\nMedia Kits\n\nCrowdloans\n\nWhat are crowdloans\n\nAcala Crowdloan\n\nKarura Crowdloan\n\nMisc\n\naUSD Incident\n\nContributing\n\nGlossary\n\nPowered By GitBook\n\n",
    "links": "[{\"link\": \"https://wiki.acala.network/\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/learn\", \"text\": \"Learn\"}, {\"link\": \"https://wiki.acala.network/build\", \"text\": \"Build\"}, {\"link\": \"https://wiki.acala.network/\", \"text\": \"Maintain\"}, {\"link\": \"https://wiki.acala.network/\", \"text\": \"Acala & Karura Wiki\"}, {\"link\": \"https://wiki.acala.network/acala-exodus-upgrade/overview\", \"text\": \"Overview\"}, {\"link\": \"https://wiki.acala.network/acala-exodus-upgrade/execution-roadmap\", \"text\": \"Execution Roadmap\"}, {\"link\": \"https://wiki.acala.network/acala-exodus-upgrade/ausd-seed-aseed\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/acala-exodus-upgrade/aca\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/acala-exodus-upgrade/universal-asset-hub-uah\", \"text\": \"Universal Asset Hub (UAH)\"}, {\"link\": \"https://wiki.acala.network/learn/acala-introduction\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/learn/trilogy-networks\", \"text\": \"Trilogy Networks\"}, {\"link\": \"https://wiki.acala.network/learn/flexible-fees\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/learn/governance-overview\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/learn/treasury\", \"text\": \"Treasury\"}, {\"link\": \"https://wiki.acala.network/learn/acala-evm\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/get-started/acala-network\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/get-started/get-started\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/get-started/mandala-testnet\", \"text\": \"Mandala Testnet\"}, {\"link\": \"https://wiki.acala.network/integrate/acala\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/integrate/karura\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/build/evm+-documentation\", \"text\": \"EVM+ documentation\"}, {\"link\": \"https://wiki.acala.network/build/sdks\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/build/guides\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/build/development-guide\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/build/development-guide/deploy-ecosystem-modules\", \"text\": \"Deploy Ecosystem Modules\"}, {\"link\": \"https://wiki.acala.network/build/development-guide/composable-chains\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/build/development-guide/open-web3-stack-and-orml\", \"text\": \"Open-Web3-Stack & ORML\"}, {\"link\": \"https://wiki.acala.network/build/development-guide/smart-contracts\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/build/development-guide/smart-contracts/get-started-evm\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/build/development-guide/smart-contracts/get-started-evm/connect-to-a-node\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/build/development-guide/smart-contracts/get-started-evm/evm-account\", \"text\": \"Setup EVM Account\"}, {\"link\": \"https://wiki.acala.network/build/development-guide/smart-contracts/get-started-evm/acala-console\", \"text\": \"Polkadot Explorer\"}, {\"link\": \"https://wiki.acala.network/build/development-guide/smart-contracts/get-started-evm/evm-playground\", \"text\": \"EVM Playground\"}, {\"link\": \"https://wiki.acala.network/build/development-guide/smart-contracts/get-started-evm/use-remix\", \"text\": \"Use Remix\"}, {\"link\": \"https://wiki.acala.network/build/development-guide/smart-contracts/get-started-evm/use-waffle\", \"text\": \"Use Waffle\"}, {\"link\": \"https://wiki.acala.network/build/development-guide/smart-contracts/get-started-evm/use-hardhat\", \"text\": \"Use Hardhat\"}, {\"link\": \"https://wiki.acala.network/build/development-guide/smart-contracts/get-started-evm/deploy-contracts\", \"text\": \"Deploy Contracts\"}, {\"link\": \"https://wiki.acala.network/build/development-guide/smart-contracts/advanced\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/build/development-guide/smart-contracts/acala-hacker-guide\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/build/tools\", \"text\": \"Tools\"}, {\"link\": \"https://wiki.acala.network/build/indexers\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/build/miscellaneous\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/build/cross-chain-defi\", \"text\": \"Cross Chain DeFi\"}, {\"link\": \"https://wiki.acala.network/ecosystem/general-links\", \"text\": \"General Info\"}, {\"link\": \"https://wiki.acala.network/ecosystem/partnerships\", \"text\": \"Alliance\"}, {\"link\": \"https://wiki.acala.network/ecosystem/community\", \"text\": \"Community\"}, {\"link\": \"https://wiki.acala.network/ecosystem/contribution-rewards\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/ecosystem/media-kits\", \"text\": \"Media Kits\"}, {\"link\": \"https://wiki.acala.network/crowdloans/acala-network\", \"text\": \"What are crowdloans\"}, {\"link\": \"https://wiki.acala.network/crowdloans/acala-crowdloan\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/crowdloans/crowdloan\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/misc/resources\", \"text\": \"aUSD Incident\"}, {\"link\": \"https://wiki.acala.network/misc/contributing\", \"text\": \"Contributing\"}, {\"link\": \"https://wiki.acala.network/misc/glossary\", \"text\": \"Glossary\"}, {\"link\": \"https://wiki.acala.network/build/development-guide/smart-contracts/get-started-evm/connect-to-a-node/use-metamask-with-evm+\", \"text\": \"instructions\"}, {\"link\": \"https://wiki.acala.network/build/development-guide/smart-contracts/get-started-evm/evm-account#2.-bind-an-existing-ethereum-account\", \"text\": \"bind your accounts\"}, {\"link\": \"https://wiki.acala.network/build/development-guide/smart-contracts/get-started-evm/use-hardhat\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/build/development-guide/smart-contracts/advanced\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/\", \"text\": \"Acala & Karura Wiki\"}, {\"link\": \"https://wiki.acala.network/acala-exodus-upgrade/overview\", \"text\": \"Overview\"}, {\"link\": \"https://wiki.acala.network/acala-exodus-upgrade/execution-roadmap\", \"text\": \"Execution Roadmap\"}, {\"link\": \"https://wiki.acala.network/acala-exodus-upgrade/ausd-seed-aseed\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/acala-exodus-upgrade/aca\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/acala-exodus-upgrade/universal-asset-hub-uah\", \"text\": \"Universal Asset Hub (UAH)\"}, {\"link\": \"https://wiki.acala.network/learn/acala-introduction\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/learn/trilogy-networks\", \"text\": \"Trilogy Networks\"}, {\"link\": \"https://wiki.acala.network/learn/flexible-fees\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/learn/governance-overview\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/learn/treasury\", \"text\": \"Treasury\"}, {\"link\": \"https://wiki.acala.network/learn/acala-evm\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/get-started/acala-network\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/get-started/get-started\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/get-started/mandala-testnet\", \"text\": \"Mandala Testnet\"}, {\"link\": \"https://wiki.acala.network/integrate/acala\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/integrate/karura\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/build/evm+-documentation\", \"text\": \"EVM+ documentation\"}, {\"link\": \"https://wiki.acala.network/build/sdks\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/build/guides\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/build/development-guide\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/build/development-guide/deploy-ecosystem-modules\", \"text\": \"Deploy Ecosystem Modules\"}, {\"link\": \"https://wiki.acala.network/build/development-guide/composable-chains\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/build/development-guide/open-web3-stack-and-orml\", \"text\": \"Open-Web3-Stack & ORML\"}, {\"link\": \"https://wiki.acala.network/build/development-guide/smart-contracts\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/build/development-guide/smart-contracts/get-started-evm\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/build/development-guide/smart-contracts/get-started-evm/connect-to-a-node\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/build/development-guide/smart-contracts/get-started-evm/evm-account\", \"text\": \"Setup EVM Account\"}, {\"link\": \"https://wiki.acala.network/build/development-guide/smart-contracts/get-started-evm/acala-console\", \"text\": \"Polkadot Explorer\"}, {\"link\": \"https://wiki.acala.network/build/development-guide/smart-contracts/get-started-evm/evm-playground\", \"text\": \"EVM Playground\"}, {\"link\": \"https://wiki.acala.network/build/development-guide/smart-contracts/get-started-evm/use-remix\", \"text\": \"Use Remix\"}, {\"link\": \"https://wiki.acala.network/build/development-guide/smart-contracts/get-started-evm/use-waffle\", \"text\": \"Use Waffle\"}, {\"link\": \"https://wiki.acala.network/build/development-guide/smart-contracts/get-started-evm/use-hardhat\", \"text\": \"Use Hardhat\"}, {\"link\": \"https://wiki.acala.network/build/development-guide/smart-contracts/get-started-evm/deploy-contracts\", \"text\": \"Deploy Contracts\"}, {\"link\": \"https://wiki.acala.network/build/development-guide/smart-contracts/advanced\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/build/development-guide/smart-contracts/acala-hacker-guide\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/build/tools\", \"text\": \"Tools\"}, {\"link\": \"https://wiki.acala.network/build/indexers\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/build/miscellaneous\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/build/cross-chain-defi\", \"text\": \"Cross Chain DeFi\"}, {\"link\": \"https://wiki.acala.network/ecosystem/general-links\", \"text\": \"General Info\"}, {\"link\": \"https://wiki.acala.network/ecosystem/partnerships\", \"text\": \"Alliance\"}, {\"link\": \"https://wiki.acala.network/ecosystem/community\", \"text\": \"Community\"}, {\"link\": \"https://wiki.acala.network/ecosystem/contribution-rewards\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/ecosystem/media-kits\", \"text\": \"Media Kits\"}, {\"link\": \"https://wiki.acala.network/crowdloans/acala-network\", \"text\": \"What are crowdloans\"}, {\"link\": \"https://wiki.acala.network/crowdloans/acala-crowdloan\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/crowdloans/crowdloan\", \"text\": \"\"}, {\"link\": \"https://wiki.acala.network/misc/resources\", \"text\": \"aUSD Incident\"}, {\"link\": \"https://wiki.acala.network/misc/contributing\", \"text\": \"Contributing\"}, {\"link\": \"https://wiki.acala.network/misc/glossary\", \"text\": \"Glossary\"}]"
}