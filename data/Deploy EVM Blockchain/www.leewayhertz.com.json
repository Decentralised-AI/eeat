{
    "summary": "ToggleToggle\n\n  * PRODUCTS\n    *       *         *         * **Enterprise GenAI Platform**\n\n      *         *         * **GenAI Platform for Finance**\n\n      *         *         * **GenAI Platform for Manufacturing**\n\n      *         *         * **GenAI Platform for Automotive**\n\n    *       *         *         * **GenAI Platform for Hospitality**\n\n      *         *         * **GenAI Platform for Healthcare**\n\n      *         *         * **GenAI Platform for IT**\n\n      *         *         * **GenAI Platform for Logistics**\n\n  * SERVICES\n    * Generative AI\n      *         *           *           * **Generative AI Development**\n\n        *           *           * **Generative AI Integration Services**\n\n        *           *           * **Generative AI Consulting Company**\n\n        *           *           * **Hire Generative AI Engineers**\n\n      *         *           *           * **ChatGPT Developers**\n\n        *           *           * **Stable Diffusion Developers**\n\n        *           *           * **Adaptive AI Development Company**\n\n        *           *           * **Midjourney Developers**\n\n      *         *           *           * **Transformer Model Development**\n\n        *           *           * **ChatGPT Integration Service**\n\n        *           *           * **Large Language Model Development**\n\n        *           *           * **Hire Prompt Engineers**\n\n    * Artificial Intelligence & ML\n      *         *           *           * **AI Development**\n\n        *           *           * **AI Consulting**\n\n        *           *           * **Hire AI Engineers**\n\n        *           *           * **AI as a Service**\n\n      *         *           *           * **Hire Action Transformer Developers**\n\n        *           *           * **ML Model Engineering**\n\n        *           *           * **MLOps Consulting Services**\n\n        *           *           * **Enterprise AI Development**\n\n      *         *           *           * **Machine Learning Development**\n\n        *           *           * **ML and Data Science Consulting**\n\n        *           *           * **AI Chatbot Development Company**\n\n        *           *           * **Enterprise AI Chatbot Development Company**\n\n    * Data Engineering\n      *         *           *           * **Hire Data Scientist**\n\n        *           *           * **Data Analytics Services**\n\n        *           *           * **Data Annotation Services**\n\n        *           *           * **Big Data Consulting**\n\n    * Web3\n      *         *           *           * **Web3 Development**\n\n        *           *           * **State of Web3**\n\n        *           *           * **Rust Development**\n\n        *           *           * **Web3 Game Development**\n\n      *         *           *           * **Metaverse Development**\n\n        *           *           * **Metaverse Application**\n\n        *           *           * **Metaverse Gaming Space**\n\n        *           *           * **Metaverse Avatar Development**\n\n      *         *           *           * **NFT Marketplace Development**\n\n        *           *           * **NFT Marketplace Solution**\n\n        *           *           *         *           *           *     * Blockchain\n      *         *           *           * **Blockchain Development**\n\n        *           *           * **Blockchain Consulting**\n\n        *           *           * **Substrate Development**\n\n        *           *           * **Polygon Development**\n\n      *         *           *           * **Hyperledger Development**\n\n        *           *           * **Golang Development**\n\n        *           *           * **Cosmos Development**\n\n        *           *           * **Solana Development**\n\n      *         *           *           * **Tezos Development**\n\n        *           *           * **Stellar Development**\n\n        *           *           * **Smart Contract Audit**\n\n        *           *           * **Crypto Wallet Development Solution**\n\n    * Software Development\n      *         *           *           * **Software Development  **\n\n        *           *           * **SaaS Development**\n\n        *           *           * **Software Consulting**\n\n        *           *           * **UI/UX Design Service**\n\n      *         *           *           * **Enterprise Software Development**\n\n        *           *           * **Web Application Development**\n\n        *           *           * **Digital Transformation**\n\n        *     * Hire Developers\n      *         *           *           * **Hire ML Developers**\n\n        *           *           * **DevOps Engineers**\n\n        *           *           * **Offshore Engineers**\n\n        *           *           * **App Developer**\n\n      *         *           *           * **Hire Golang Developers**\n\n        *           *           * **Blockchain Developer**\n\n        *           *           * **Hire Dedicated Developers**\n\n        *           *           * **Hire Cosmos Developers**\n\n      *         *           *           * **Hire Stellar Developers**\n\n        *           *           * **Full Stack Developer**\n\n        *         *     * Internet of Things (IoT)\n      *         *           *           * **IoT Development**\n\n        *           *           * **Industrial IoT Solutions**\n\n        *           *           * **Firmware Development**\n\n        *           *           * **IoT Healthcare Software**\n\n      *         *           *           * **IoT Product Development**\n\n        *           *           * **Hardware Design**\n\n        *         *     * Metaverse\n      *         *           *           * **Metaverse Integration**\n\n        *           *           * **Metaverse 3D Space**\n\n        *           *           * **Metaverse Gaming Space**\n\n        *           *           * **Metaverse Social Media**\n\n      *         *           *           * **Metaverse Application**\n\n        *           *           * **Metaverse Decentralized**\n\n        *           *           * **Metaverse Development**\n\n        *     * Software Consulting\n      *         *           *           * **AI Consulting**\n\n        *           *           * **RPA Consulting**\n\n        *           *           * **Blockchain Consulting**\n\n        *           *           * **DevOps Consulting**\n\n      *         *           *           * **Covid-19 Technology Consulting**\n\n        *           *           * **Digital Risk Management**\n\n        *         *   * INDUSTRIES\n    *       *         *         * **Consumer Electronics**\n\n      *         *         * **Fintech**\n\n      *         *         * **Healthcare**\n\n      *         *         * **Insurance**\n\n      *         *         * **Logistics**\n\n    *       *         *         * **On-Demand App Development**\n\n      *         *         * **Manufacturing**\n\n      *         *         * **Retail**\n\n      *         *         * **Startup**\n\n      *         *         * **Travel**\n\n  * INSIGHTS\n  * WORK\n  * ABOUT\n  * CONTACT US\n\nSelect Page\n\n# Steps to Create, Test and Deploy Ethereum Smart Contract\n\nTalk to our Consultant\n\nEver since Ethereum was introduced in the blockchain space with its presence\nin 2015, Vitalik Buterin, a Canadian-Russian programmer, has brought forth new\ndecentralized applications (dApps). However, Ethereum\u2019s success is\nsignificantly attributed to the implementation of smart contracts.\n\nMany people believe that smart contracts are a new concept and were invented\nwith the Ethereum Blockchain Platform. But smart contracts date back to 1996\nwhen computer scientist Nick Szabo coined the term \u201csmart contracts\u201d and\nexplained them as:\n\nI call these new contracts \u201csmart\u201d, because they are far more functional than\ntheir inanimate paper-based ancestors. No use of artificial intelligence is\nimplied. A smart contract is a set of promises specified in digital form,\nincluding protocols within which the parties perform on these promises.\n\nHis work later inspired other scientists and researchers, as well as Vitalik,\nwho developed Ethereum.\n\nBefore we go deeper into the creation and deployment of the Ethereum smart\ncontract, it is essential to understand the Ethereum platform and how it\nworks.\n\n  * Ethereum, as a Blockchain Platform for developing decentralized applications\n  * How Ethereum Blockchain Platform executes Smart Contracts?\n  * What is a Smart Contract?\n  * What is Solidity?\n  * Steps to develop an Ethereum Smart Contract\n  * Steps to test an Ethereum smart contract\n  * Tools and Technologies required for implementing Ethereum Smart Contracts\n\n## Ethereum, as a Blockchain Platform for developing decentralized\napplications\n\nBlockchain platforms allow developers to create and run smart contracts.\nEthereum is also one of the blockchain platforms that can execute arbitrary\ncode so that you can perform any program on Ethereum.\n\nThe Ethereum Blockchain is a potential distributed infrastructure that\nfacilitates you to complete projects using smart contracts.\n\n  * **Create your cryptocurrencies** **  \n** Ethereum, you can create a tradable token that you can use as a new\ncurrency. Tokens created with the Ethereum platform use a standard coin API to\nbe compatible with any Ethereum blockchain wallet.\n\n  * **Develop virtual organizations** **  \n** You can write a smart contract to build a blockchain-based organization.\nYou can then add more people to your organization and enable voting rules.\nMembers of your organization can vote and if it reaches the required number of\nvotes, the smart contract executes automatically.\n\n  * **Build dApps** **  \n** Ethereum allows developers to develop secure and fault-tolerant\ndecentralized apps that eliminate intermediaries and offer transparency.\n\n  * **Raise funds** **  \n** You can also use Ethereum smart contracts for fundraising. With Ethereum,\nyou can write a smart contract and a deadline. In case you fail to accomplish\nthe goal, all donations will automatically be reimbursed to donors without\ndisputes or commissions.\n\n## How Ethereum Blockchain Platform executes Smart Contracts\n\nBefore discussing how to create a smart contract on the Ethereum platform, you\nneed to understand the Ethereum blockchain and how it runs smart contracts.\n\nSo, let\u2019s understand the execution environment first.\n\n#### **Ethereum Virtual Machine (EVM)**\n\nThe purpose of EVM is to serve as a runtime environment for smart contracts\nbuilt on Ethereum. Consider it as a global supercomputer that executes all the\nsmart contracts.\n\nAs the name indicates, Ethereum Virtual Machine is not physical but a virtual\nmachine. The functionality of EVM is restricted to virtual machines; for\nexample, it cannot make delayed calls on the internet or produce random\nnumbers. Therefore, it is considered a simple state machine. Writing programs\nin assembly language do not make any sense, so, Ethereum required a\nprogramming language for the EVM.\n\n#### **Gas**\n\nIn the Ethereum Virtual Machine, gas is a measurement unit used for assigning\nfees to each transaction with a smart contract. Each computation happening in\nthe EVM needs some amount of gas. The more complex the computation is, the\nmore the gas is required to run the smart contracts.\n\n**Transaction fee = Total gas used*gas price**\n\n#### **Solidity**\n\nSolidity is a smart contract programming language on Ethereum. Developed on\nthe top of the EVM, it is similar to the object-oriented programming language\nthat uses class and methods. It allows you to perform arbitrary computations,\nbut it is used to send and receive tokens and store states. When it comes to\nsyntax, Solidity is greatly influenced by C++, Python, and Javascript so that\ndevelopers can understand its syntax quickly.\n\nIt would be best to have a good understanding of Solidity programming language\nto efficiently write an Ethereum Smart Contract.\n\n## What is a Smart Contract?\n\nSmart Contracts are the business logic or a protocol according to which all\nthe transactions on a Blockchain happen. The smart contract\u2019s general\nobjective is to satisfy common contractual conditions like creating its own\ntoken on ethereum. We need to develop smart contracts according to which all\nthe calculations on our token would happen.\n\nIt is a stand-alone script written in Solidity and compiled into JSON and\ndeployed to a particular address on the blockchain. Just like we can call a\nURL endpoint of a RESTful API to run some logic through an HttpRequest, we can\nexecute deployed smart contract similarly at a particular address by entering\nthe accurate data along with Ethereum to call the compiled and deployed\nSolidity function.\n\nSmart contracts are deployed to the decentralized database for a fee\nproportional to the containing code\u2019s storage size. It can also be defined as\na collection of code stored in the blockchain network, defining conditions to\nwhich all parties within the contract should agree.\n\nWe will be sharing the example of Ethereum smart contract creation using the\nSolidity programming language. So, it is first essential to understand what is\nSolidity.\n\n## What is Solidity?\n\nSolidity is a Javascript-like language developed specifically for creating\nsmart contracts. It is typed statically and supports libraries, inheritance\nand complex user-defined types.\n\nSolidity compiler converts code into EVM bytecode which is sent to the\nEthereum network as a deployment transaction.\n\n**Here\u2019s a step-by-step guide to creating and deploying Ethereum Smart\nContracts with Solidity**\n\n**Installing Prerequisites**\n\n**Meta-mask Chrome Extension**\n\nMetaMask acts both as an Ethereum browser and a wallet. It allows you to\ninteract with smart contracts and dApps on the web without downloading the\nblockchain or installing any software. You only need to add MetaMask as a\nChrome Extension, create a wallet and submit Ether.\n\nThough MetaMask is currently available for Google Chrome browser, it is\nexpected to launch for Firefox too in the coming years.\n\nDownload MetaMask chrome extension before you start writing smart contracts.\n\nOnce it is downloaded and added as a Chrome extension, you can either import\nan already created wallet or create a new wallet. You must have some ethers in\nyour Ethereum wallet to deploy Ethereum smart contract on the network.\n\n## Steps to develop an Ethereum Smart Contract\n\n**Step 1: Create a wallet at meta-mask**\n\nInstall MetaMask in your Chrome browser and enable it. Once it is installed,\nclick on its icon on the top right of the browser page. Clicking on it will\nopen it in a new tab of the browser.\n\nClick on \u201cCreate Wallet\u201d and agree to the terms and conditions by clicking \u201cI\nagree\u201d to proceed further. It will ask you to create a password.\n\nAfter you create a password, it will send you a secret backup phrase used for\nbacking up and restoring the account. Do not disclose it or share it with\nsomeone, as this phrase can take away your Ethers.\n\n  \nYou should either write this phrase on a piece of paper securely or store it\nsafely on an external encrypted hard drive where no one could find it.\n\nThe next step is to ensure that you are in the \u201cMain Ethereum Network.\u201d If you\nfind a checkmark next to \u201cMain Ethereum Network\u201d, you are in the right place.\n\n**Step 2: Select any one test network**\n\nYou might also find the following test networks in your MetaMask wallet:\n\n  * Robsten Test Network\n  * Kovan Test Network\n  * Rinkeby Test Network\n  * Goerli Test Network\n\nThe above networks are for testing purposes only; note that these networks\u2019\nethers have no real value.\n\n**Step 3: Add some dummy Ethers to your wallet**\n\nIn case you want to test the smart contract, you must have some dummy ethers\nin your MetaMask wallet.\n\nFor example, if you want to test a contract using the Robsten test network,\nselect it and you will find 0 ETH as the initial balance in your account.\n\nTo add dummy ethers, click on the \u201cDeposit\u201d and \u201cGet Ether\u201d buttons under Test\nFaucet.\n\n## LeewayHertz\u2019s Ethereum Smart Contract Development\n\nAutomate your business processes with Ethereum Smart Contracts\n\nCONSULT OUR EXPERTS\n\nTo proceed, you need to click \u201crequest one ether from the faucet,\u201d and 1 ETH\nwill be added to your wallet. You can add as many Ethers you want to the test\nnetwork.\n\nFor example, I have added 1 ETH in this scenario.\n\nOnce the dummy ethers are added to the wallet, you can start writing smart\ncontracts on the Remix Browser IDE in the Solidity programming language.\n\n**Step 4: Use editor remix to write the smart contract in Solidity**\n\nWe will use Remix Browser IDE to write our Solidity code. The remix is the\nbest option for writing smart contracts as it comes with a handful of features\nand offers a comprehensive development experience.\n\nIt is usually used for writing smaller-sized contracts. Remix\u2019s features\ninclude:\n\n  * Warnings like gas cost, unsafe code, checks for overlapping variable names, whether functions can be constant or not\n  * Syntax and error highlighting\n  * Functions with injected Web3 objects\n  * Static analysis\n  * Integrated debugger\n  * Integrated testing and deployment environment\n  * Deploy directly to Mist or MetaMask\n\nLet\u2019s start writing smart contract code by visiting\nhttps://remix.ethereum.org.\n\n**Step 5: Create a .sol extension file**\n\nOpen Remix Browser and click on the plus icon on the top left side, next to\nthe browser to create a .sol extension file.\n\n**Step 6: A sample smart contract code to create ERC20 tokens**\n\nERC20.sol is a standard template for ERC20 tokens.\n\n    \n    \n    pragma solidity ^0.4.0;\n    import \"./ERC20.sol\";\n    contract myToken is ERC20{\n    mapping(address =&gt;uint256) public amount;\n    uint256 totalAmount;\n    string tokenName;\n    string tokenSymbol;\n    uint256 decimal;\n    constructor() public{\n    totalAmount = 10000 * 10**18;\n    amount[msg.sender]=totalAmount;\n    tokenName=\"Mytoken\";\n    tokenSymbol=\"Mytoken\";\n    decimal=18;\n    }\n    function totalSupply() public view returns(uint256){\n    return totalAmount;\n    }\n    function balanceOf(address to_who) public view\n    returns(uint256){\n    return amount[to_who];\n    }\n    function transfer(address to_a,uint256 _value) public\n    returns(bool){\n    require(_value&lt;=amount[msg.sender]);\n    amount[msg.sender]=amount[msg.sender]-_value;\n    amount[to_a]=amount[to_a]+_value;\n    return true;\n    }\n    }\n    \n\nSelect a version of the compiler from Remix to compile the solidity Ethereum\nsmart contract code.\n\n**Step 7: Deploy your contract**\n\nDeploy the smart contract at the Ethereum test network by pressing the deploy\nbutton at the Remix window\u2019s right-hand side.  \nWait until the transaction is complete.\n\nAfter the transaction commits successfully, the address of the smart contract\nwould be visible at the right-hand side of the remix  \nwindow.\n\nAt first, all the ERC20 tokens will be stored in the wallet of a user who is\ndeploying the smart contract.\n\nTo check the tokens in your wallet, go to the metamask window, click add\ntokens, enter the smart contract address and click ok. You would be able to\nsee the number of tokens there.\n\n## Steps to test an Ethereum smart contract\n\n  1. Try to run all your smart contract methods like transfer, total supply, and balance(in the above smart contract example). These methods are present at the right-hand side of the remix window and you can run all the processes from there itself.\n  2. Try to transfer some tokens to other ethereum wallet addresses and then check the balance of that address by calling the balance method.\n  3. Try to get total supply by running the total supply method.\n\n## Steps to deploy Ethereum Smart Contracts\n\n  1. To make your smart contract live, switch to the main ethereum network at metamask\n  2. Add some real ethers.\n  3. Now again, deploy your smart contract using remix as mentioned in the above steps.\n  4. When a smart contract is deployed successfully, visit http://www.etherscan.io and search your smart contract address there. Select your smart contract.\n  5. Now you need to verify your smart contract here, click \u201cverify the contract.\u201d\n  6. Copy your smart contract code and paste it at Etherscan. Select the same compiler version that you selected at remix to compile your code.\n  7. Check \u201coptimization\u201d to Yes, if you had selected optimization at remix; otherwise, select No.\n  8. Click Verify.\n  9. It will take a few minutes and your smart contract will be live if no issue occurs.\n  10. You can now run your smart contract methods at Etherscan.\n\n## Tools and Technologies required for implementing Ethereum Smart Contracts\n\n  * **Truffle** **  \n**t is an Ethereum development framework that allows developers to write and\ntest smart contracts. Written in JavaScript, Truffle contains a compiler for\nthe Solidity programming language. Truffle Contract is a JavaScript library\nthat allows importing of compiled smart contracts.\n\n  * **Web3.js** **  \n**It is an Ethereum JavaScript API that interacts with the Ethereum network\nvia RPC calls.\n\n  * **Visual Studio Code** **  \n**A functional code editor.\n\n  * **Ganache CLI** **  \n**It is an Ethereum remote procedure call client within the Truffle framework\nthat is also known as TestRPC.\n\n  * **Parity** **  \n**It is a secure and fast Ethereum client for handling Ethereum accounts and\ntokens.\n\n  * **Node.js** **  \n**It is a javascript runtime environment used for server-side programming.\nNode.js is required to test the Ethereum smart contract\u2019s functionality while\nensuring its secure and proper operation. You need to install a package\nmanager, for example, Yarn along with Node.js.\n\n_We have a team of_ _smart contract developers_ _who ensure to develop secure\nand efficient smart contracts for various purposes, including crowdfunding,\nbidding, permissioning, and dApps. In case, you are looking to deploy smart\ncontracts for your business operations, consult us and discuss your\nrequirements._\n\n#### Author\u2019s Bio\n\n\n\nAkash Takyar\n\nCEO LeewayHertz\n\nAkash Takyar is the founder and CEO at LeewayHertz. The experience of building\nover 100+ platforms for startups and enterprises allows Akash to rapidly\narchitect and design solutions that are scalable and beautiful.  \nAkash's ability to build enterprise-grade technology solutions has attracted\nover 30 Fortune 500 companies, including Siemens, 3M, P&G and Hershey\u2019s.  \nAkash is an early adopter of new technology, a passionate technology\nenthusiast, and an investor in AI and IoT startups.\n\nWrite to Akash\n\n## Start a conversation by filling the form\n\nOnce you let us know your requirement, our technical expert will schedule a\ncall and discuss your idea in detail post sign of an NDA.  \n**All information will be kept confidential.**\n\nSend me the signed Non-Disclosure Agreement (NDA )\n\n## **Insights**\n\n## How to create ERC-20 token on Ethereum network?\n\nERC20 tokens, executed as smart contracts on the Ethereum Virtual Machine ,\ndefine rules of interaction and purchase with other tokens.\n\nread more\n\n## ERC20 vs ERC721 vs ERC1155\n\nERC20, ERC721, and ERC1155 are the prevalent token standards as approved by\nthe Ethereum community.\n\nread more\n\n## How to develop NFT Marketplace on Ethereum?\n\nWith the help of NFT marketplace developed on Ethereum blockchain, you can\nleverage open transaction history for ownership verification.\n\nread more\n\nShow all Insights\n\n#### LEEWAYHERTZ\n\n  * About Us\n  * Global AI Club\n  * Careers\n  * Case Studies\n  * Work\n  * Community\n\n#### PORTFOLIO\n\n  * TraceRx\n  * ESPN\n  * Filecoin\n  * Lottery of People\n  * Chrysallis.AI\n  * ZBrain\n\n#### SERVICES\n\n  * AI Development\n  * AI Consulting\n  * Web3\n  * Blockchain\n  * Software Development\n  * Hire AI Developers\n\n#### Generative AI\n\n  * Generative AI Development\n  * Generative AI Consulting\n  * Generative AI Integration\n  * LLM Development\n  * Prompt Engineering\n  * ChatGPT Developers\n\n#### INDUSTRIES\n\n  * Consumer Electronics\n  * Financial Markets\n  * Healthcare\n  * Logistics\n  * Manufacturing\n  * Startup\n\n#### INSIGHTS\n\n  * AI Use Cases\n  * Conversational AI\n  * Private LLM\n  * AI in Finance\n  * AI Document Processing\n  * AI Chatbot\n\n#### CONTACT US\n\nGet In Touch  \n415-301-2880  \ninfo@leewayhertz.com  \njobs@leewayhertz.com\n\n\n\n\n\n\n\n\n\n\n\nSitemap\n\n  *   \n\n  *   \n\n  *   \n\n  *   \n\n\u00a92024 LeewayHertz. All Rights Reserved.\n\n  \n\nThis website uses cookies to enhance site navigation and improve\nfunctionality, analyze site usage, and assist in our marketing and advertising\nefforts. Read More  \n\n  \n\nThis website uses cookies to enhance site navigation and improve\nfunctionality, analyze site usage, and assist in our marketing and advertising\nefforts. Please click \"I accept cookies\" to let us know you're okay with our\nuse of all cookies. For more information please see the cookies section of our\nPrivacy Policy. Read More  \n\nI ACCEPT COOKIES\n\nPrivacy & Cookies Policy\n\nClose\n\n#### Privacy Overview\n\nThis website uses cookies to improve your experience while you navigate\nthrough the website. Out of these cookies, the cookies that are categorized as\nnecessary are stored on your browser as they are essential for the working of\nbasic functionalities of the website. We also use third-party cookies that\nhelp us analyze and understand how you use this website. These cookies will be\nstored in your browser only with your consent. You also have the option to\nopt-out of these cookies. But opting out of some of these cookies may have an\neffect on your browsing experience.\n\nNecessary\n\nNecessary\n\nAlways Enabled\n\nNecessary cookies are absolutely essential for the website to function\nproperly. This category only includes cookies that ensures basic\nfunctionalities and security features of the website. These cookies do not\nstore any personal information.\n\nNon-necessary\n\nNon-necessary\n\nAny cookies that may not be particularly necessary for the website to function\nand is used specifically to collect user personal data via analytics, ads,\nother embedded contents are termed as non-necessary cookies. It is mandatory\nto procure user consent prior to running these cookies on your website.\n\nSAVE & ACCEPT\n\n\u00d7\n\nFollow Us\n\n  *   *   *   *   *   * \n\n",
    "links": "[{\"link\": \"https://www.leewayhertz.com/ethereum-smart-contract-tutorial/#ethereum_as_a_blockchain_platform_for_developing_decentralized_applications\", \"text\": \"Ethereum, as a Blockchain Platform for developing decentralized applications\"}, {\"link\": \"https://www.leewayhertz.com/ethereum-smart-contract-tutorial/#how_ethereum_blockchain_platform_executes_smart_contracts?\", \"text\": \"How Ethereum Blockchain Platform executes Smart Contracts?\"}, {\"link\": \"https://www.leewayhertz.com/ethereum-smart-contract-tutorial/#what_is_a_Smart_contract?\", \"text\": \"What is a Smart Contract?\"}, {\"link\": \"https://www.leewayhertz.com/ethereum-smart-contract-tutorial/#what_is_solidity?\", \"text\": \"What is Solidity?\"}, {\"link\": \"https://www.leewayhertz.com/ethereum-smart-contract-tutorial/#steps_to_develop_an_ethereum_smart_contract\", \"text\": \"Steps to develop an Ethereum Smart Contract\"}, {\"link\": \"https://www.leewayhertz.com/ethereum-smart-contract-tutorial/#steps_to_test_an_ethereum_smart_contract\", \"text\": \"Steps to test an Ethereum smart contract\"}, {\"link\": \"https://www.leewayhertz.com/ethereum-smart-contract-tutorial/#tools_and_technologies_required_for_implementing_ethereum_smart_contracts\", \"text\": \"Tools and Technologies required for implementing Ethereum Smart Contracts\"}]"
}