{
    "summary": "  * Skip to Content\n  * Skip to Search\n  * Home\n\n __ __\n\n __\n\n  * Cloud Applications \n\n    * Cloud Applications \n    * Fusion Applications Suite\n    * NetSuite Applications\n    * Industry-Specific Applications\n    * Advertising (Data Cloud)\n\n  * Cloud Infrastructure \n\n    * Cloud Infrastructure \n    * Get Started\n    * Free Tier\n    * Government Cloud\n    * Services\n    * Developer Resources\n    * Security\n    * More Resources\n    * Launch Infrastructure Console\n    * All Cloud Infrastructure\n\n  * On-Premises Applications \n\n    * On-Premises Applications \n    * Fusion Applications On Premises\n    * Enterprise Performance Management\n    * E-Business\n    * PeopleSoft\n    * Siebel\n    * JD Edwards\n    * All Applications\n\n  * Middleware \n\n    * Middleware \n    * Business Intelligence\n    * Data Integrator\n    * Enterprise Manager\n    * GoldenGate\n    * Identity Management\n    * JavaScript Extension Toolkit\n    * Platform Security Services\n    * SOA Suite\n    * WebCenter\n    * WebLogic Server\n    * All Middleware\n\n  * Database\n\n    * Database\n    * Big Data\n    * Enterprise Manager\n    * Oracle Database\n    * Other Databases\n    * All Database\n\n  * Engineered Systems\n\n    * Engineered Systems\n    * Advanced Support Gateway\n    * Autonomous Health Checks and Diagnostics\n    * Big Data Appliance\n    * Database Appliance\n    * Enterprise Manager\n    * Exadata Database Machine\n    * Exalogic Elastic Cloud\n    * Exalytics In-Memory Machine\n    * MiniCluster\n    * Private Cloud Appliance\n    * SuperCluster\n    * Zero Data Loss Recovery Appliance\n    * ZFS Storage Appliance\n    * All Engineered Systems\n\n  * Java\n\n    * Java\n    * Java EE\n    * Java Embedded\n    * Java SE\n    * All Java\n\n  * Systems\n\n    * Systems\n    * Networking\n    * Servers\n    * Storage\n    * All Systems\n\n  * Operating Environments\n\n    * Operating Environments\n    * Operating Systems\n    * Virtualization\n    * All Operating Environments\n\n  * Virtualization\n\n    * Virtualization\n    * Oracle Linux Virtualization Manager\n    * Oracle VM\n    * Oracle VM VirtualBox\n    * Secure Global Desktop\n    * All Virtualization\n\n  * Industry-Specific Applications\n\n    * Industry-Specific Applications\n    * Communications\n    * Construction and Engineering\n    * Energy and Water\n    * Financial Services\n    * Food and Beverage\n    * Health\n    * Health Sciences\n    * Hospitality\n    * Insurance\n    * Public Sector\n    * Retail\n    * State and Local\n    * All Industries\n\n  * Architecture Center\n\n    * Architecture Center\n    * Reference Architectures\n    * Solution Playbooks\n    * Built & Deployed\n    * All Architecture Center\n\n  * Tutorials and Labs\n\n* * *\n\n  * All Services & Products\n  * Help Center Home\n  * Oracle.com Home\n\n* * *\n\n  * Get started with Cloud\n\nHelp Center\n\nUsing Oracle Blockchain Platform Enterprise Edition\n\nSearch is scoped to:\n\nUsing Oracle Blockchain Platform Enterprise Edition\n\nNo matching results\n\nTry a different search query.\n\nSearch Unavailable\n\nWe are making updates to our Search system right now. Please try again later.\n\n  *  __\n\n##### Oracle Account\n\n    * Account\n    * Help\n    * Sign Out\n\n##### Oracle Account\n\nManage your account and access personalized content. Sign up for an Oracle\nAccount\n\nSign in to my Account\n\n##### Sign in to Cloud\n\nAccess your cloud dashboard, manage orders, and more. Free Cloud Platform\nTrial\n\nSign in to Cloud\n\n  1. Database\n  2. Other Databases\n  3. Oracle Blockchain Platform Enterprise Edition\n  4. Release 21.1\n\nUsing Oracle Blockchain Platform\n\nExpand\n\n  * Title and Copyright Information\n\n  * Preface\n\n  * 1 What's Oracle Blockchain Platform?\n\n  * 2 Get Started Using Samples\n\n  * 3 Manage the Organization and Network\n\n  * 4 Understand and Manage Nodes by Type\n\n  * 5 Extend the Network\n\n  * 6 Develop Chaincodes\n\n  * 7 Deploy and Manage Chaincodes\n\n  * 8 Develop Blockchain Applications\n\n  * 9 Work With Databases\n\n  * A Node Configuration\n\n  * B Using the Fine-Grained Access Control Library Included in the Marbles Sample\n\n  * C Using Blockchain App Builder for Oracle Blockchain Platform\n\n  * D Run Solidity Smart Contracts with EVM on Oracle Blockchain Platform\n\n  1. Using Oracle Blockchain Platform\n  2. Run Solidity Smart Contracts with EVM on Oracle Blockchain Platform\n\n## D Run Solidity Smart Contracts with EVM on Oracle Blockchain Platform\n\nThis topic provides a walkthrough showing how you can run Solidity smart\ncontracts with EVM (Ethereum Virtual Machine) deployed as a chaincode on\nOracle Blockchain Platform.\n\nThe Ethereum Virtual Machine runs smart contracts in the Ethereum networks. It\nwas created through the Hyperledger Burrow project and has been integrated\ninto Hyperledger Fabric. This project enables you to use a Hyperledger Fabric\npermissioned blockchain platform to interact with Ethereum smart contracts\nwritten in an EVM-compatible language such as Solidity. See: Hyperledger\nFabric EVM chaincode.\n\nA basic overview of the process of running a Solidity smart contract on a\nprovisioned Oracle Blockchain Platform:\n\n  1. Upload the EVM chaincode zip into Oracle Blockchain Platform.\n  2. Deploy it using the bytecode generated by the Remix IDE.\n  3. Get the smart contract address in response to the deployment, and use that address to send transactions.\n\nSteps in this topic have been tested with `fabric-chaincode-evm:release-0.4`\nand may not work with other releases.\n\nSet Up the EVM Chaincode Zip File\n\nBefore deploying the smart contract, the EVM chaincode zip needs to be\nprepared. To create the chaincode zip folder:\n\n  1. Download the EVM chaincode zip from Hyperledger Fabric EVM chaincode. \n  2. Unzip the downloaded `fabric-chaincode-evm-release-0.4.zip`. \n  3. In the extracted files, go to `fabric-chaincode-evm-release-0.4/evmcc/vendor/github.com/hyperledger`. \n  4. Create the directory `fabric-chaincode-evm/evmcc` in the `/hyperledger` directory. \n  5. Copy the following folders from `fabric-chaincode-evm-release-0.4/evmcc` to `fabric-chaincode-evm-release-0.4/evmcc/vendor/github.com/hyperledger/fabric-chaincode-evm/evmcc`: \n    * `/address`\n    * `/event`\n    * `/eventmanager`\n    * `/mocks`\n    * `/statemanager`\n  6. Zip the top-level `fabric-chaincode-evm-release-0.4/evmcc` folder and rename it. The following steps use `evmcc.zip` as the example name. \n\nDeploy EVM Chaincode on Oracle Blockchain Platform\n\nAfter you have created the EVM chaincode zip, you need to deploy it on Oracle\nBlockchain Platform.\n\n  1. Log into the Oracle Blockchain Platform console.\n  2. On the Chaincodes tab, click Deploy a New Chaincode. \n  3. Select Quick Deployment, and entire the following information: \n    * Chaincode Name: enter any name of your choice. This example uses `soliditycc`. \n    * Version: `v0`\n    * Initial Parameters for Chaincode Instantiation: leave this field empty \n    * Channel: select the channels on which you want to install and instantiate the chaincode \n    * Chaincode source: upload the `evmcc.zip` package you created in the previous steps. \nAfter you submit your information, the EVM chaincode will be visible in the\nChaincodes tab.\n\nCreate and Compile Your Solidity Smart Contract\n\n  1. Open the browser-based Remix IDE: https://remix.ethereum.org/. \n  2. If you already have a Solidity smart contract written, import it into Remix.\n  3. If you don't have a Solidity smart contract written, create a Solidity file (`.sol`) in Remix and do one of the following: \n    * If you're familiar with Solidity you can create your own smart contract file.\n    * You can use the Simple Storage sample code provided in the Solidity documentation: Solidity: Introduction to Smart Contracts\n    * You can use the sample code being used for this example which takes `string name` as an input and prints the same as output string using `set(name)` and `get()`:\n        \n                Copy\n        \n        pragma solidity ^0.4.0;\n        contract Myname {\n            string public yourName;\n        \n            function set(string name) public {\n                yourName = name;\n            }\n            function get() public view returns (string) {\n                return yourName;\n            }\n        }\n        \n\nNote that you may see an error message about the default compiler version not\nmatching the version you've specified in your smart contract.\n\n  4. Compile your smart contract. Open the Solidity Compiler panel in Remix, ensure that your smart contract tab is open to select it as the file being compiled, set the compiler version to the most recent 4.X version, and click Compile.   \n\n  \n\n  5. Once the file has compiled, click the Bytecode icon - this copies the bytecode as a JSON document to your clipboard. \n  6. Paste the copied bytecode into a text editor and save it. \n\nDeploy the Smart Contract\n\nIn the copied bytecode, the section you need is the `\"object\"` field. This is\nthe EVM bytecode of a sample smart contract.\n\n    \n    \n    Copy\n    \n    \"object\": \"608060405234801561001057600080fd5b50610410806100206000396000f30060\n    8060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463\n    ffffffff1680634ed3885e1461005c5780636d4ce63c146100c5578063d97d663014610155575b600080fd5b34801561\n    006857600080fd5b506100c3600480360381019080803590602001908201803590602001908080601f01602080910402\n    602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506101\n    e5565b005b3480156100d157600080fd5b506100da6101ff565b60405180806020018281038252838181518152602001\n    91508051906020019080838360005b8381101561011a5780820151818401526020810190506100ff565b505050509050\n    90810190601f1680156101475780820380516001836020036101000a031916815260200191505b509250505060405180\n    910390f35b34801561016157600080fd5b5061016a6102a1565b60405180806020018281038252838181518152602001\n    91508051906020019080838360005b838110156101aa57808201518184015260208101905061018f565b505050509050\n    90810190601f1680156101d75780820380516001836020036101000a031916815260200191505b509250505060405180\n    910390f35b80600090805190602001906101fb92919061033f565b5050565b6060600080546001816001161561010002\n    03166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615\n    6101000203166002900480156102975780601f1061026c57610100808354040283529160200191610297565b82019190\n    6000526020600020905b81548152906001019060200180831161027a57829003601f168201915b505050505090509056\n    5b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190\n    818152602001828054600181600116156101000203166002900480156103375780601f1061030c576101008083540402\n    83529160200191610337565b820191906000526020600020905b81548152906001019060200180831161031a57829003\n    601f168201915b505050505081565b828054600181600116156101000203166002900490600052602060002090601f01\n    6020900481019282601f1061038057805160ff19168380011785556103ae565b828001600101855582156103ae579182\n    015b828111156103ad578251825591602001919060010190610392565b5b5090506103bb91906103bf565b5090565b61\n    03e191905b808211156103dd5760008160009055506001016103c5565b5090565b905600a165627a7a72305820a990d4\n    0b57c66329a32a18e847b3c18d6c911487ffadfed2098e71e8cafa0c980029\",\n\nIn general, the EVM expects two arguments:\n\n  * The `to` address. \n  * The `input` that's necessary in Ethereum transactions. \n\nTo deploy smart contracts, the `to` field is the zero address, and the `input`\nis the compiled EVM bytecode of the contract. Thus, there are two arguments\nprovided to the `invoke`. The first one, which was traditionally supposed to\nbe a function name inside the chaincode, is now\n`0000000000000000000000000000000000000000`, and the second argument is the\nSolidity smart contract bytecode.\n\n  1. To deploy the Solidity smart contract on Oracle Blockchain Platform, you need to invoke the deployed EVM chaincode with these two arguments using REST proxy endpoints. \n    \n        Copy\n    \n    \n    --data-raw '{\"chaincode\":\"<chaincodename>\",\"args\":[\"<zeroaddress>\",\"<EVMbytecode>\"]}'\n    \n\nFor example, using cURL to deploy the Solidity smart contract to Oracle\nBlockchain Platform with the name `soliditycc`:\n\n    \n        Copy\n    \n    curl -L -X POST 'https://<hostname>:7443/restproxy/api/v2/channels/<channelname>/transactions' \\\n    -H 'Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ=' \\\n    -H 'Content-Type: application/json' \\\n    --data-raw '{\"chaincode\":\"soliditycc\",\"args\":[\"0000000000000000000000000000000000000000\",\"608060405234801561....152d2820d3b5d784b3711119691d0029\"],\"timeout\":0,\"sync\":true}'\n\n  2. The response `payload` of the transaction is the contract address for your deployed contract. Copy this address and save it - it's used when you execute smart contract functions.  \n  \nIn this example, the smart contract address is\n`66b92979bb66d645371b3247177e4b2513cb9834`.\n\nInteracting With the Smart Contract\n\nTo interact with the deployed smart contract, you need the contract address\nreturned as the payload while deploying the contract in the previous section.\n\nTo execute functions, you will use invoke and query transactions but with\ndifferent parameters. The sample contract contains two functions: `get` and\n`set`.\n\nIn these transactions, the `to` field is the contract address and the `input`\nfield is the function execution hash concatenated with any of the required\narguments.\n\nYou need to acquire the hash of the function execution to run a transaction. A\nsimple way to do this is to execute the functions in the Remix IDE and to then\ncopy the hash from the transaction logs:\n\n  1. In the Remix IDE, open the Deploy and Run Transactions panel. Ensure that your contract is selected in the Contract field, and click Deploy.   \n\n  \nOnce the deployment completes, the contract should be listed in the Deployed\nContracts list.\n\n  2. Expand the contract in the Deployed Contracts list. The smart contract functions are listed. \n  3. Run a transaction. For the provided example, enter `oracle` and click set. \n  4. The Terminal window shows the transaction logs. If the transaction logs are minimized, expand them by clicking the log. Copy the value of the `input` field (which is the function execution hash) by clicking the icon next to it. Save this value to the same location as your contract address, removing the leading `0x`.  \n\n  \n\n  5. Once you have the function execution hash and the contract address, you can run the set transaction on Oracle Blockchain Platform using them as the raw data arguments. \n    \n        Copy\n    \n    \n    --data-raw '{\"chaincode\":\"<chaincodename>\",\"args\":[\"<contractaddress>\",\"<setfunctionexecutionhash>\"]}'\n    \n\nFor example using cURL:\n\n    \n        Copy\n    \n    curl -L -X POST 'https://<hostname>:7443/restproxy/api/v2/channels/<channelname>/transactions' \\\n    -H 'Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ=' \\\n    -H 'Content-Type: application/json' \\\n    --data-raw '{\"chaincode\":\"soliditycc\",\"args\":[\"66b92979bb66d645371b3247177e4b2513cb9834\",\"4ed3885e000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000066f7261636c650000000000000000000000000000000000000000000000000000\"]}'\n    \n\n  6. Open the Oracle Blockchain Platform console; the transaction should be listed in the ledger.\n\nTo run another transaction such as a query using the smart contract's `get`\nfunction, you can generate the function execution hash in Remix and combine it\nwith the contract address:\n\n  1. In Remix on the Deploy and Run Transactions panel, ensure that your contract is still listed under Deployed Contracts. If not, redeploy it. \n  2. Click get. Retrieve and save the input from the transaction as you did with the set transaction, removing the leading `0x`.  \n\n  \n\n  3. You can use this transaction hash and the contract address to run a query transaction against the chaincode deployed on Oracle Blockchain Platform. \n    \n        Copy\n    \n    \n    --data-raw '{\"chaincode\":\"<chaincodename>\",\"args\":[\"<contractaddress>\",\"<getfunctionexecutionhash>\"]}'\n    \n\nFor example in cURL:\n\n    \n        Copy\n    \n    curl -L -X POST 'https://<hostname>:7443/restproxy/api/v2/channels/<channelname>/chaincode-queries' \\\n    -H 'Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ=' \\\n    -H 'Content-Type: application/json' \\\n    --data-raw '{\"chaincode\":\"soliditycc\",\"args\":[\"66b92979bb66d645371b3247177e4b2513cb9834\",\"6d4ce63c\"]}'\n    \n\nThe returned payload will contain the asset being queried - in the example\ncase the string `oracle`.\n\nPrevious Page\n\nNext Page\n\n\n\n  * D Run Solidity Smart Contracts with EVM on Oracle Blockchain Platform \n\nWas this page helpful?\n\n  * \u00a9 Oracle\n  * About Oracle\n  * Contact Us\n  * Products A-Z\n  * Terms of Use & Privacy\n  * Cookie Preferences\n\n  * Ad Choices\n\n",
    "links": "[{\"link\": \"https://docs.oracle.com/\", \"text\": \"Home\"}, {\"link\": \"https://docs.oracle.com/en/applications/fusion-apps/index.html\", \"text\": \"Fusion Applications On Premises\"}, {\"link\": \"https://docs.oracle.com/en/applications/enterprise-performance-management/index.html\", \"text\": \"Enterprise Performance Management\"}, {\"link\": \"https://docs.oracle.com/en/applications/e-business-suite/index.html\", \"text\": \"E-Business\"}, {\"link\": \"https://docs.oracle.com/en/applications/peoplesoft/index.html\", \"text\": \"PeopleSoft\"}, {\"link\": \"https://docs.oracle.com/en/applications/siebel/index.html\", \"text\": \"Siebel\"}, {\"link\": \"https://docs.oracle.com/en/applications/jd-edwards/index.html\", \"text\": \"JD Edwards\"}, {\"link\": \"https://docs.oracle.com/en/bigdata/index.html\", \"text\": \"Big Data\"}, {\"link\": \"https://docs.oracle.com/en/enterprise-manager/index.html\", \"text\": \"Enterprise Manager\"}, {\"link\": \"https://docs.oracle.com/en/database/other-databases/index.html\", \"text\": \"Other Databases\"}, {\"link\": \"https://docs.oracle.com/cd/E41177_01/index.html\", \"text\": \"Advanced Support Gateway\"}, {\"link\": \"https://docs.oracle.com/en/engineered-systems/health-diagnostics/\", \"text\": \"Autonomous Health Checks and Diagnostics\"}, {\"link\": \"https://docs.oracle.com/en/bigdata/big-data-appliance/\", \"text\": \"Big Data Appliance\"}, {\"link\": \"https://docs.oracle.com/en/engineered-systems/oracle-database-appliance/\", \"text\": \"Database Appliance\"}, {\"link\": \"https://docs.oracle.com/cd/E18476_01/index.htm\", \"text\": \"Exalogic Elastic Cloud\"}, {\"link\": \"https://docs.oracle.com/en/engineered-systems/index.html#OracleExalyticsIn-MemoryMachine\", \"text\": \"Exalytics In-Memory Machine\"}, {\"link\": \"https://docs.oracle.com/cd/E69469_01/index.html\", \"text\": \"MiniCluster\"}, {\"link\": \"https://docs.oracle.com/en/engineered-systems/private-cloud-appliance/\", \"text\": \"Private Cloud Appliance\"}, {\"link\": \"https://docs.oracle.com/en/engineered-systems/index.html#OracleSuperCluster\", \"text\": \"SuperCluster\"}, {\"link\": \"https://docs.oracle.com/en/engineered-systems/zero-data-loss-recovery-appliance/\", \"text\": \"Zero Data Loss Recovery Appliance\"}, {\"link\": \"https://docs.oracle.com/en/engineered-systems/index.html\", \"text\": \"All Engineered Systems\"}, {\"link\": \"https://docs.oracle.com/javaee/7/index.html\", \"text\": \"Java EE\"}, {\"link\": \"https://docs.oracle.com/javame/8.3/index.html\", \"text\": \"Java Embedded\"}, {\"link\": \"https://docs.oracle.com/en/networking/index.html\", \"text\": \"Networking\"}, {\"link\": \"https://docs.oracle.com/en/servers/index.html\", \"text\": \"Servers\"}, {\"link\": \"https://docs.oracle.com/cd/F15085_01/index.html\", \"text\": \"Oracle Linux Virtualization Manager\"}, {\"link\": \"https://docs.oracle.com/en/virtualization/index.html#OracleVM\", \"text\": \"Oracle VM\"}, {\"link\": \"https://docs.oracle.com/en/virtualization/index.html\", \"text\": \"All Virtualization\"}, {\"link\": \"https://docs.oracle.com/en/industries/construction-engineering/index.html\", \"text\": \"Construction and Engineering\"}, {\"link\": \"https://docs.oracle.com/en/industries/utilities/index.html\", \"text\": \"Energy and Water\"}, {\"link\": \"https://docs.oracle.com/en/industries/food-beverage/index.html\", \"text\": \"Food and Beverage\"}, {\"link\": \"https://docs.oracle.com/en/industries/health-sciences/index.html\", \"text\": \"Health Sciences\"}, {\"link\": \"https://docs.oracle.com/en/industries/hospitality/index.html\", \"text\": \"Hospitality\"}, {\"link\": \"https://docs.oracle.com/en/industries/insurance/index.html\", \"text\": \"Insurance\"}, {\"link\": \"https://docs.oracle.com/en/industries/retail/index.html\", \"text\": \"Retail\"}, {\"link\": \"https://docs.oracle.com/solutions/?q=&cType=reference-architectures&sort=date-desc&lang=en\", \"text\": \"Reference Architectures\"}, {\"link\": \"https://docs.oracle.com/solutions/?q=&cType=solution-playbook&sort=date-desc&lang=en\", \"text\": \"Solution Playbooks\"}, {\"link\": \"https://docs.oracle.com/solutions/?q=&cType=built-deployed&sort=date-desc&lang=en\", \"text\": \"Built & Deployed\"}, {\"link\": \"https://docs.oracle.com/\", \"text\": \"Help Center Home\"}, {\"link\": \"https://docs.oracle.com/en/cloud/index.html\", \"text\": \"Get started with Cloud\"}, {\"link\": \"https://docs.oracle.com/\", \"text\": \"Help Center\"}, {\"link\": \"https://profile.oracle.com/myprofile/account/secure/update-account.jspx?nexturl=https://docs.oracle.com/en/database/other-databases/blockchain-enterprise/21.1/user/run-solidity-smart-contracts-evm-oracle-blockchain-platform.html#GUID-EBC37229-48BE-4088-AB7F-3D1CADD3F39A\", \"text\": \"\"}, {\"link\": \"https://profile.oracle.com/myprofile/account/secure/update-account.jspx?nexturl=https://docs.oracle.com/en/database/other-databases/blockchain-enterprise/21.1/user/run-solidity-smart-contracts-evm-oracle-blockchain-platform.html#GUID-EBC37229-48BE-4088-AB7F-3D1CADD3F39A\", \"text\": \"Account\"}, {\"link\": \"https://www.oracle.com/webapps/redirect/signon?nexturl=https://docs.oracle.com/en/database/other-databases/blockchain-enterprise/21.1/user/run-solidity-smart-contracts-evm-oracle-blockchain-platform.html#GUID-EBC37229-48BE-4088-AB7F-3D1CADD3F39A\", \"text\": \"Sign in to my Account\"}, {\"link\": \"https://docs.oracle.com/en/database/index.html\", \"text\": \"Database\"}, {\"link\": \"https://docs.oracle.com/en/database/other-databases/index.html\", \"text\": \"Other Databases\"}, {\"link\": \"https://docs.oracle.com/en/database/other-databases/blockchain-enterprise/index.html\", \"text\": \"Oracle Blockchain Platform Enterprise Edition\"}, {\"link\": \"https://docs.oracle.com/en/database/other-databases/blockchain-enterprise/21.1/index.html\", \"text\": \"Release 21.1\"}, {\"link\": \"https://docs.oracle.com/en/browseall.html\", \"text\": \"Products A-Z\"}]"
}