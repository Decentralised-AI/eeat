{
    "summary": "Skip to content\n\nHome\n\nSign in\n\nAn image of the Stripe logo\n\nSearch the docs\n\n`/`\n\nCreate account\n\nSign in\n\nHome\n\nPayments\n\nFinance automation\n\nBanking as a service\n\nDeveloper tools\n\nNo-code\n\nAll products\n\nHome\n\nPayments\n\nFinance automation\n\nHome\n\nPayments\n\nFinance automation\n\nBanking as a service\n\nDeveloper tools\n\nAPIs & SDKs\n\nHelp\n\nOverview\n\nGet started\n\nAbout Stripe payments\n\nStart an integration\n\nPayment Links\n\nCheckout\n\nWeb Elements\n\nMobile Elements\n\nPayment scenarios\n\nDuring the payment\n\nAfter the payment\n\nAdd payment methods\n\nMore payment scenarios\n\nFaster checkout with Link\n\nOther Stripe products\n\nConnect\n\nTerminal\n\nRadar\n\nFinancial Connections\n\nCrypto\n\nIdentity\n\nOverview\n\nGet started\n\nVerify identity documents\n\nHandle verification outcomes\n\nAccess verification results\n\nReview verification results\n\nMore verification checks\n\nVerification checks\n\nAdding selfie checks\n\nAbout the APIs\n\nVerification Sessions\n\nGo live\n\nBefore going live\n\nSupported use cases\n\nExplaining Identity\n\nClimate\n\nResources\n\nAbout the APIs\n\nImplementation guides\n\nRegulation support\n\nTesting\n\nUnited States\n\nEnglish (United States)\n\nHomePayments\n\n# Identity\n\nLearn how to verify identities using Stripe Identity.\n\nAvailable for users in:\n\nUse Stripe Identity to confirm the identity of global users to prevent fraud,\nstreamline risk operations, and increase trust and safety. Stripe Identity\nallows you to:\n\n  * Verify the authenticity of ID documents from more than 120 countries\n  * Capture IDs with a conversion-optimized verification flow\n  * Match photo IDs with selfies, and validate Social Security numbers (SSNs)\n  * Access collected images, and extracted data from ID documents\n\n## Get started\n\nSign up\n\nActivate Identity in the Dashboard.\n\nVerify your users\u2019 identity documents\n\nBegin by creating sessions and collecting identity documents.\n\nHandle verification outcomes\n\nListen for verification outcomes so your integration can automatically trigger\nreactions.\n\n## More verification checks\n\nVerification checks\n\nLearn about all the different verification checks supported by Stripe\nIdentity.\n\nAdding selfie checks\n\nAdd face similarity checks to prevent fraudsters from using stolen documents.\n\nAdditional verifications for Connect\n\nCollect additional identity verification as part of your Connect onboarding\nexperience.\n\n## Clone a sample project\n\nTry out the demo\n\nPreview a demo of Stripe Identity\n\nVerify identity documents\n\nWeb \u00b7 Mobile Web\n\nWas this page helpful?\n\nYes\n\nNo\n\nNeed help? Contact Support.\n\nWatch our developer tutorials.\n\nCheck out our product changelog.\n\nQuestions? Contact Sales.\n\nPowered by Markdoc\n\nSign up for developer updates:\n\nSign up\n\nYou can unsubscribe at any time. Read our privacy policy.\n\nStripe Shell\n\nTest mode\n\nAPI Explorer\n\n    \n    \n    Welcome to the Stripe Shell!\n    \n    Stripe Shell is a browser-based shell with the Stripe CLI pre-installed. Log in to your\n    Stripe account and press Control + Backtick (`) on your keyboard to start managing your Stripe\n    resources in test mode.\n    \n    - View supported Stripe commands: \n    \n    stripe help \u25b6\ufe0f\n    \n    \n    - Find webhook events: \n    \n    stripe trigger \u25b6\ufe0f [event]\n    \n    \n    - Listen for webhook events: \n    \n    stripe listen \u25b6\n    \n    \n    - Call Stripe APIs: stripe [api resource] [operation] (e.g., \n    \n    stripe customers list \u25b6\ufe0f\n    \n    )\n    \n\nThe Stripe Shell is best experienced on desktop.\n\n    \n    \n    $\n    \n    \n     \n\n`\n\nWe use cookies to improve your experience and for marketing. Read our cookie\npolicy or manage cookies.\n\nAccept all\n\nReject all\n\n",
    "links": "[{\"link\": \"https://stripe.com/docs\", \"text\": \"\"}, {\"link\": \"https://stripe.com/docs\", \"text\": \"\"}, {\"link\": \"https://stripe.com/docs/payments\", \"text\": \"\"}, {\"link\": \"https://stripe.com/docs/finance-automation\", \"text\": \"\"}, {\"link\": \"https://stripe.com/docs/financial-services\", \"text\": \"\"}, {\"link\": \"https://stripe.com/docs/development\", \"text\": \"\"}, {\"link\": \"https://stripe.com/docs/no-code\", \"text\": \"\"}, {\"link\": \"https://stripe.com/docs/products\", \"text\": \"\"}, {\"link\": \"https://stripe.com/docs\", \"text\": \"\"}, {\"link\": \"https://stripe.com/docs/payments\", \"text\": \"\"}, {\"link\": \"https://stripe.com/docs/finance-automation\", \"text\": \"\"}, {\"link\": \"https://stripe.com/docs\", \"text\": \"\"}, {\"link\": \"https://stripe.com/docs/payments\", \"text\": \"\"}, {\"link\": \"https://stripe.com/docs/finance-automation\", \"text\": \"\"}, {\"link\": \"https://stripe.com/docs/financial-services\", \"text\": \"\"}, {\"link\": \"https://stripe.com/docs/development\", \"text\": \"\"}, {\"link\": \"https://stripe.com/docs/payments\", \"text\": \"Overview\"}, {\"link\": \"https://stripe.com/docs/identity/verify-identity-documents\", \"text\": \"Verify identity documents\"}, {\"link\": \"https://stripe.com/docs/identity/handle-verification-outcomes\", \"text\": \"Handle verification outcomes\"}, {\"link\": \"https://stripe.com/docs/identity/access-verification-results\", \"text\": \"Access verification results\"}, {\"link\": \"https://stripe.com/docs/identity/review-tools\", \"text\": \"Review verification results\"}, {\"link\": \"https://stripe.com/docs/identity/verification-checks\", \"text\": \"Verification checks\"}, {\"link\": \"https://stripe.com/docs/identity/selfie\", \"text\": \"Adding selfie checks\"}, {\"link\": \"https://stripe.com/docs/identity/verification-sessions\", \"text\": \"\"}, {\"link\": \"https://stripe.com/docs/identity/before-going-live\", \"text\": \"Before going live\"}, {\"link\": \"https://stripe.com/docs/identity/use-cases\", \"text\": \"Supported use cases\"}, {\"link\": \"https://stripe.com/docs/identity/explaining-identity\", \"text\": \"Explaining Identity\"}, {\"link\": \"https://stripe.com/docs/testing\", \"text\": \"Testing\"}, {\"link\": \"https://stripe.com/docs\", \"text\": \"Home\"}, {\"link\": \"https://stripe.com/docs/payments\", \"text\": \"Payments\"}, {\"link\": \"https://stripe.com/docs/identity/verify-identity-documents\", \"text\": \"\"}, {\"link\": \"https://stripe.com/docs/identity/handle-verification-outcomes\", \"text\": \"\"}, {\"link\": \"https://stripe.com/docs/identity/verification-checks\", \"text\": \"\"}, {\"link\": \"https://stripe.com/docs/identity/selfie\", \"text\": \"\"}, {\"link\": \"https://stripe.com/docs/connect/additional-verifications\", \"text\": \"\"}, {\"link\": \"https://stripe.com/docs/samples/identity/modal\", \"text\": \"\"}, {\"link\": \"https://stripe.com/docs/videos/\", \"text\": \"developer tutorials\"}, {\"link\": \"https://stripe.com/privacy\", \"text\": \"privacy policy\"}]",
    "priceAndPlans": "Skip to content\n\nHome\n\nSign in\n\nAn image of the Stripe logo\n\nSearch the docs\n\n`/`\n\nCreate account\n\nSign in\n\nHome\n\nPayments\n\nFinance automation\n\nBanking as a service\n\nDeveloper tools\n\nNo-code\n\nAll products\n\nHome\n\nPayments\n\nFinance automation\n\nHome\n\nPayments\n\nFinance automation\n\nBanking as a service\n\nDeveloper tools\n\nAPIs & SDKs\n\nHelp\n\nOverview\n\nGet started\n\nAbout Stripe payments\n\nStart an integration\n\nPayment Links\n\nCheckout\n\nWeb Elements\n\nMobile Elements\n\nPayment scenarios\n\nDuring the payment\n\nAfter the payment\n\nAdd payment methods\n\nMore payment scenarios\n\nFaster checkout with Link\n\nOther Stripe products\n\nConnect\n\nTerminal\n\nRadar\n\nFinancial Connections\n\nCrypto\n\nIdentity\n\nOverview\n\nGet started\n\nVerify identity documents\n\nHandle verification outcomes\n\nAccess verification results\n\nReview verification results\n\nMore verification checks\n\nVerification checks\n\nAdding selfie checks\n\nAbout the APIs\n\nVerification Sessions\n\nGo live\n\nBefore going live\n\nSupported use cases\n\nExplaining Identity\n\nClimate\n\nResources\n\nAbout the APIs\n\nImplementation guides\n\nRegulation support\n\nTesting\n\nUnited States\n\nEnglish (United States)\n\nIdentity\n\n\u00b7\n\nHomePaymentsIdentity\n\n# Verify your users\u2019 identity documents\n\nCreate sessions and collect identity documents.\n\nThis guide explains how to use Stripe Identity to securely collect and verify\nidentity documents.\n\n## Before you begin\n\n  1. Activate your account.\n  2. Fill out your Stripe Identity application.\n  3. (Optional) Customize your brand settings on the branding settings page.\n\n\n\nWeb\n\niOS\n\nAndroid\n\nReact Native\n\nNo code\n\nModal\n\nRedirect\n\nShow a document upload modal inside your website.\n\nHere\u2019s what you\u2019ll do:\n\n  1. Add a verification button to your webpage that displays a document upload modal.\n  2. Display a confirmation page on identity document submission.\n  3. Handle verification results.\n\n## Set up Stripe\n\nServer-side\n\nFirst, register for a Stripe account.\n\nThen install the libraries for access to the Stripe API from your application:\n\nRuby\n\nPython\n\nPHP\n\nJava\n\nNode\n\nGo\n\n.NET\n\nCommand Line\n\n    \n    \n    # Available as a gem\n    sudo gem install stripe\n\nGemfile\n\n    \n    \n    # If you use bundler, you can add this line to your Gemfile\n    gem 'stripe'\n\n## Add a button to your website\n\nClient-side\n\nCreate a button on your website for starting the verification.\n\nHTML + JS\n\nReact\n\n### Add a button\n\nStart by adding a verify button to your page:\n\nverification.html\n\n    \n    \n    <html>\n      <head>\n        <title>Verify your identity</title>\n      </head>\n      <body>\n        <button id=\"verify-button\">Verify</button>\n      </body>\n    </html>\n\n### Add the Stripe.js library to your page\n\nAdd Stripe.js to your page by including a script tag in your HTML document:\n\nverification.html\n\n    \n    \n    <html>\n      <head>\n        <title>Verify your identity</title>\n        <script src=\"https://js.stripe.com/v3/\"></script>\n      </head>\n      <body>\n        <button id=\"verify-button\">Verify</button>\n      </body>\n    </html>\n\n#### Note\n\nAlways load **Stripe.js** directly from `https://js.stripe.com`. You can\u2019t\ninclude it in a bundle or self-host it.\n\n### Initialize Stripe.js\n\nInitialize Stripe.js with your publishable API key by passing the following\nJavaScript to your page:\n\nverification.html\n\n    \n    \n    <html>\n      <head>\n        <title>Verify your identity</title>\n        <script src=\"https://js.stripe.com/v3/\"></script>\n      </head>\n      <body>\n        <button id=\"verify-button\">Verify</button>\n        <script type=\"text/javascript\">\n          // Set your publishable key: remember to change this to your live publishable key in production\n          // See your keys here: https://dashboard.stripe.com/apikeys\n          var stripe = Stripe(\n    \n    'pk_test_TYooMQauvdEDq54NiTphI7jx'\n    \n    );\n        </script>\n      </body>\n    </html>\n\n## Show the document upload modal\n\nClient-side\n\nServer-side\n\nSet up the new button to show a document upload modal. After clicking the\nbutton, your user can capture and upload a picture of their passport, driver\u2019s\nlicense, or national ID.\n\nThe modal reduces development time and maintenance and allows you to collect\nidentity documents as part of your existing flows. It also decreases the\namount of private information you handle on your site, allows you to support\nusers in a variety of platforms and languages, and allows you to customize the\nstyle to match your branding.\n\n### Create a VerificationSession\n\nA VerificationSession is the programmatic representation of the verification.\nIt contains details about the type of verification, such as what check to\nperform. You can expand the verified outputs field to see details of the data\nthat was verified.\n\nAfter successfully creating a `VerificationSession`, send the client secret to\nthe frontend to show the document upload modal.\n\nYou need a server-side endpoint to create the VerificationSession. Creating\nthe `VerificationSession` server-side prevents malicious users from overriding\nverification options and incurring processing charges on your account. Add\nauthentication to this endpoint by including a user reference in the session\nmetadata or storing the session ID in your database.\n\nNode\n\nRuby\n\nPython\n\nPHP\n\nJava\n\nGo\n\n.NET\n\nserver.js\n\n    \n    \n    // Set your secret key. Remember to switch to your live secret key in production.\n    // See your keys here: https://dashboard.stripe.com/apikeys\n    const stripe = require('stripe')(\n    \n    'sk_test_4eC39HqLyjWDarjtT1zdp7dc'\n    \n    );\n    \n    // In the route handler for /create-verification-session:\n    // Authenticate your user.\n    \n    // Create the session.\n    const verificationSession = await stripe.identity.verificationSessions.\n    \n    create\n    \n    ({\n      \n    \n    type\n    \n    : 'document',\n      \n    \n    metadata\n    \n    : {\n        user_id: '{{USER_ID}}',\n      },\n    });\n    \n    // Return only the client secret to the frontend.\n    const clientSecret = verificationSession.client_secret;\n\n#### Caution\n\nThe client secret lets your frontend collect sensitive verification\ninformation. It\u2019s single-use and expires after 24 hours. Don\u2019t store it, log\nit, embed it in a URL, or expose it to anyone other than the user. Make sure\nthat you have TLS enabled on any page that includes the client secret. Send\nonly the client secret to your frontend to avoid exposing verification\nconfiguration or results.\n\nTest your endpoint by starting your web server (for example, `localhost:4242`)\nand sending a POST request with curl to create a VerificationSession:\n\nCommand Line\n\n    \n    \n    curl -X POST -is \"http://localhost:4242/create-verification-session\" -d \"\"\n\nThe response in your terminal looks like this:\n\nCommand Line\n\n    \n    \n    HTTP/1.1 200 OK\n    Content-Type: application/json\n    \n    { client_secret: \"vs_QdfQQ6xfGNJR7ogV6...\"  }\n\n### Add an event handler to the verify button\n\nNow that you have a button and an endpoint to create a VerificationSession,\nmodify the button to show the document upload modal when clicked. Add a call\nto `verifyIdentity` using the client secret:\n\nHTML + JS\n\nReact\n\nverification.html\n\n    \n    \n    <html>\n      <head>\n        <title>Verify your identity</title>\n        <script src=\"https://js.stripe.com/v3/\"></script>\n      </head>\n      <body>\n        <button id=\"verify-button\">Verify</button>\n    \n        <script type=\"text/javascript\">\n          // Set your publishable key: remember to change this to your live publishable key in production\n          // See your keys here: https://dashboard.stripe.com/apikeys\n          var stripe = Stripe(\n    \n    'pk_test_TYooMQauvdEDq54NiTphI7jx'\n    \n    );\n    \n          var verifyButton = document.getElementById('verify-button');\n    \n          verifyButton.addEventListener('click', function() {\n            // Get the VerificationSession client secret using the server-side\n            // endpoint you created in step 3.\n            fetch('/create-verification-session', {\n              method: 'POST',\n            })\n            .then(function(response) {\n              return response.json();\n            })\n            .then(function(session) {\n              // Show the verification modal.\n              return stripe.verifyIdentity(session.client_secret);\n            })\n            .then(function(result) {\n              // If `verifyIdentity` fails, you should display the localized\n              // error message to your user using `error.message`.\n              if (result.error) {\n                alert(result.error.message);\n              }\n            })\n            .catch(function(error) {\n              console.error('Error:', error);\n            });\n          });\n        </script>\n      </body>\n    </html>\n\n### Event error codes\n\nError code| Description  \n---|---  \n`consent_declined`| The user declined verification by Stripe. Check with your\nlegal counsel to see if you have an obligation to offer an alternative, non-\nbiometric means to verify, such as through a manual review.  \n`device_unsupported`| The verification requires a camera and the user is on a\ndevice without one.  \n`under_supported_age`| Stripe doesn\u2019t verify users under the age of majority.  \n  \n### Test the upload modal\n\nTest that the verify button shows a document upload modal:\n\n  * Click the verify button, which opens the Stripe document upload modal.\n  * Ensure no error messages are shown.\n\nIf your integration isn\u2019t working:\n\n  1. Open the Network tab in your browser\u2019s developer tools.\n  2. Click the verify button to see if it makes an XHR request to your server-side endpoint (`POST /create-verification-session`).\n  3. Verify that the request returns a 200 status.\n  4. Use `console.log(session)` inside your button click listener to confirm that it returns the correct data.\n\n## Show a confirmation page\n\nClient-side\n\nTo provide a user-friendly experience, show a confirmation page after users\nsuccessfully submit their identity document. Host the page on your site to let\nthe user know that the verification is processing.\n\nHTML + JS\n\nReact\n\nCreate a minimal confirmation page:\n\nsubmitted.html\n\n    \n    \n    <html>\n      <head><title>Your document was submitted</title></head>\n      <body>\n        <h1>Thanks for submitting your identity document.</h1>\n        <p>\n          We are processing your verification.\n        </p>\n      </body>\n    </html>\n\nNext, update the button handler to redirect to this page:\n\nverification.html\n\n    \n    \n    <html>\n      <head>\n        <title>Verify your identity</title>\n        <script src=\"https://js.stripe.com/v3/\"></script>\n      </head>\n      <body>\n        <button id=\"verify-button\">Verify</button>\n    \n        <script type=\"text/javascript\">\n          // Set your publishable key: remember to change this to your live publishable key in production\n          // See your keys here: https://dashboard.stripe.com/apikeys\n          var stripe = Stripe(\n    \n    'pk_test_TYooMQauvdEDq54NiTphI7jx'\n    \n    )\n    \n          var verifyButton = document.getElementById('verify-button');\n    \n          verifyButton.addEventListener('click', function() {\n            // Get the VerificationSession client secret using the server-side\n            // endpoint you created in step 3.\n            fetch('/create-verification-session', {\n              method: 'POST',\n            })\n            .then(function(response) {\n              return response.json();\n            })\n            .then(function(session) {\n              // Show the verification modal.\n              return stripe.verifyIdentity(session.client_secret);\n            })\n            .then(function(result) {\n              // If `verifyIdentity` fails, you should display the error message\n              // using `error.message`.\n              if (result.error) {\n                alert(result.error.message);\n              } else {\n                window.location.href = 'submitted.html';\n              }\n            })\n            .catch(function(error) {\n              console.error('Error:', error);\n            });\n          });\n        </script>\n      </body>\n    </html>\n\n### Test the confirmation page\n\nTest that your confirmation page works:\n\n  * Click your verify button.\n  * Submit the session by selecting a predefined test case.\n  * Confirm that the new confirmation page is shown.\n  * Test the entire flow for failure cases (such as declining consent or refusing camera permissions) and ensure your app handles them without any issues.\n\nNext, find the verification in the Stripe Dashboard. Verification sessions\nappear in the Dashboard\u2019s list of VerificationSessions. Click a session to go\nto the Session Detail page. The summary section contains verification results,\nwhich you can use in your app.\n\n## Handle verification events\n\nDocument checks are asynchronous, which means that verification results are\nnot immediately available. An identity document check typically takes 1 to 3\nminutes to complete. After the processing completes, the VerificationSession\nstatus changes from `processing` to `verified`.\n\nStripe sends the following events when the session status changes:\n\nEvent name| Description| Next steps  \n---|---|---  \n`identity.verification_session.verified`| Processing of all the verification\nchecks have completed, and they\u2019re all successfully verified.| Trigger\nrelevant actions in your application.  \n`identity.verification_session.requires_input`| Processing of all the\nverification checks have completed, and at least one of the checks failed.|\nTrigger relevant actions in your application and potentially allow your user\nto retry the verification.  \n  \nUse a webhook handler to receive these events and automate actions like\nsending a confirmation email, updating the verification results in your\ndatabase, or completing an onboarding step. You can also view verification\nevents in the Dashboard.\n\n## Receive events and run business actions\n\n### With code\n\nBuild a webhook handler to listen for events and build custom asynchronous\nverification flows. Test and debug your webhook integration locally with the\nStripe CLI.\n\nBuild a custom webhook\n\n### Without code\n\nUse the Dashboard to view all your verifications, inspect collected data, and\nunderstand verification failures.\n\nView your test verifications in the Dashboard\n\n## See also\n\n  * Handle verification outcomes\n  * Learn about VerificationSessions\n  * Learn about Stripe.js\n\nWas this page helpful?\n\nYes\n\nNo\n\nNeed help? Contact Support.\n\nWatch our developer tutorials.\n\nCheck out our product changelog.\n\nQuestions? Contact Sales.\n\nPowered by Markdoc\n\nSign up for developer updates:\n\nSign up\n\nYou can unsubscribe at any time. Read our privacy policy.\n\nOn this page\n\nBefore you begin\n\nSet up Stripe\n\nAdd a button to your website\n\nShow the document upload modal\n\nShow a confirmation page\n\nHandle verification events\n\nReceive events and run business actions\n\nSee also\n\nProducts Used\n\nIdentity\n\nStripe Shell\n\nTest mode\n\nAPI Explorer\n\n    \n    \n    Welcome to the Stripe Shell!\n    \n    Stripe Shell is a browser-based shell with the Stripe CLI pre-installed. Log in to your\n    Stripe account and press Control + Backtick (`) on your keyboard to start managing your Stripe\n    resources in test mode.\n    \n    - View supported Stripe commands: \n    \n    stripe help \u25b6\ufe0f\n    \n    \n    - Find webhook events: \n    \n    stripe trigger \u25b6\ufe0f [event]\n    \n    \n    - Listen for webhook events: \n    \n    stripe listen \u25b6\n    \n    \n    - Call Stripe APIs: stripe [api resource] [operation] (e.g., \n    \n    stripe customers list \u25b6\ufe0f\n    \n    )\n    \n\nThe Stripe Shell is best experienced on desktop.\n\n    \n    \n    $\n    \n    \n     \n\n`\n\nWe use cookies to improve your experience and for marketing. Read our cookie\npolicy or manage cookies.\n\nAccept all\n\nReject all\n\nWatch the video guide\n\nMini Player\n\n"
}