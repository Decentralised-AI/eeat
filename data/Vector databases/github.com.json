{
    "summary": "Skip to content Toggle navigation\n\nSign up\n\n  * Product \n\n    * Actions\n\nAutomate any workflow\n\n    * Packages\n\nHost and manage packages\n\n    * Security\n\nFind and fix vulnerabilities\n\n    * Codespaces\n\nInstant dev environments\n\n    * Copilot\n\nWrite better code with AI\n\n    * Code review\n\nManage code changes\n\n    * Issues\n\nPlan and track work\n\n    * Discussions\n\nCollaborate outside of code\n\nExplore\n\n    * All features \n    * Documentation \n    * GitHub Skills \n    * Blog \n\n  * Solutions \n\nFor\n\n    * Enterprise \n    * Teams \n    * Startups \n    * Education \n\nBy Solution\n\n    * CI/CD & Automation \n    * DevOps \n    * DevSecOps \n\nResources\n\n    * Learning Pathways \n    * White papers, Ebooks, Webinars \n    * Customer Stories \n    * Partners \n\n  * Open Source \n\n    * GitHub Sponsors\n\nFund open source developers\n\n    * The ReadME Project\n\nGitHub community articles\n\nRepositories\n\n    * Topics \n    * Trending \n    * Collections \n\n  * Pricing\n\nSearch or jump to...\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch\n\nClear\n\nSearch syntax tips\n\n#  Provide feedback\n\nWe read every piece of feedback, and take your input very seriously.\n\nInclude my email address so I can be contacted\n\nCancel  Submit feedback\n\n#  Saved searches\n\n## Use saved searches to filter your results more quickly\n\nName\n\nQuery\n\nTo see all available qualifiers, see our documentation.\n\nCancel  Create saved search\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\n\nDismiss alert\n\n{{ message }}\n\nfacebookresearch  / **faiss ** Public\n\n  * Notifications \n  * Fork 3.2k\n  * Star  25.1k\n\nA library for efficient similarity search and clustering of dense vectors.\n\nfaiss.ai\n\n### License\n\nMIT license\n\n25.1k stars  3.2k forks  Activity\n\nStar\n\nNotifications\n\n  * Code\n  * Issues 364\n  * Pull requests 23\n  * Discussions\n  * Actions\n  * Projects 4\n  * Wiki\n  * Security\n  * Insights\n\nMore\n\n  * Code \n  * Issues \n  * Pull requests \n  * Discussions \n  * Actions \n  * Projects \n  * Wiki \n  * Security \n  * Insights \n\n# facebookresearch/faiss\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\nmain\n\nSwitch branches/tags\n\nBranches Tags\n\nCould not load branches\n\nNothing to show\n\n{{ refName }} default View all branches\n\nCould not load tags\n\nNothing to show\n\n{{ refName }} default\n\nView all tags\n\n# Name already in use\n\nA tag already exists with the provided branch name. Many Git commands accept\nboth tag and branch names, so creating this branch may cause unexpected\nbehavior. Are you sure you want to create this branch?\n\nCancel  Create\n\n**24** branches **19** tags\n\nGo to file  Code\n\n  * Local\n  * Codespaces\n\n  * Clone \n\nHTTPS  GitHub CLI\n\nUse Git or checkout with SVN using the web URL.\n\nWork fast with our official CLI. Learn more about the CLI.\n\n  * Open with GitHub Desktop \n  * Download ZIP \n\n#### Sign In Required\n\nPlease sign in to use Codespaces.\n\n#### Launching GitHub Desktop\n\nIf nothing happens, download GitHub Desktop and try again.\n\n#### Launching GitHub Desktop\n\nIf nothing happens, download GitHub Desktop and try again.\n\n#### Launching Xcode\n\nIf nothing happens, download Xcode and try again.\n\n#### Launching Visual Studio Code\n\nYour codespace will open once ready.\n\nThere was a problem preparing your codespace, please try again.\n\n## Latest commit\n\nalgoriddle and facebook-github-bot bench_fw - fixes & nits for oss (#3102)\n\n\u2026\n\nLoading status checks\u2026\n\nc3b9374  Oct 20, 2023\n\nbench_fw - fixes & nits for oss (#3102)\n\n    \n    \n    Summary: Pull Request resolved: #3102\n    \n    Reviewed By: pemazare\n    \n    Differential Revision: D50426528\n    \n    Pulled By: algoriddle\n    \n    fbshipit-source-id: 886960b8b522318967fc5ec305666871b496cae8\n\n`c3b9374`\n\n## Git stats\n\n  * **900** commits \n\n## Files\n\nPermalink\n\nFailed to load latest commit information.\n\nType\n\nName\n\nLatest commit message\n\nCommit time\n\n.circleci\n\nRemove uneeded PTX code generation from libfaiss builds (#3083)\n\nOctober 4, 2023 12:11\n\n.github\n\nChange default branch references from master to main. (#2029)\n\nSeptember 1, 2021 09:26\n\nbenchs\n\nbench_fw - fixes & nits for oss (#3102)\n\nOctober 20, 2023 07:53\n\nc_api\n\nFix some typos (#3056)\n\nSeptember 27, 2023 03:17\n\ncmake\n\nIntegrate IVF-Flat from RAFT (#2521)\n\nOctober 4, 2023 23:42\n\nconda\n\nfaiss-gpu-raft, fix dispatch test (#3017)\n\nAugust 19, 2023 10:26\n\ncontrib\n\nRelax IVFFlatDedup test (#3077)\n\nSeptember 29, 2023 01:16\n\ndemos\n\nFix some typos (#3056)\n\nSeptember 27, 2023 03:17\n\nfaiss\n\noffline index evaluation (#3097)\n\nOctober 17, 2023 13:56\n\nmisc\n\nEnable clang-format + autofix.\n\nFebruary 25, 2021 04:46\n\ntests\n\nRelax IVFFlatDedup test (#3077)\n\nSeptember 29, 2023 01:16\n\ntutorial\n\nPut idx_t in the faiss namespace (#2582)\n\nNovember 30, 2022 08:25\n\n.clang-format\n\nRe-factor factory string parsing (#2134)\n\nDecember 7, 2021 04:35\n\n.dockerignore\n\nAdd Dockerfile (#55)\n\nMarch 23, 2017 18:25\n\n.gitignore\n\nAQ fastscan (#2169)\n\nFebruary 22, 2022 15:24\n\nCHANGELOG.md\n\nPrepare for v1.7.4 release (#2820)\n\nApril 19, 2023 06:18\n\nCMakeLists.txt\n\nsimplify raft build (#2983)\n\nAugust 4, 2023 06:52\n\nCODE_OF_CONDUCT.md\n\nOSS Automated Fix: Addition of Code of Conduct\n\nMarch 22, 2019 11:13\n\nCONTRIBUTING.md\n\nUpdate docs (C++11 -> C++17) (#2907)\n\nJune 14, 2023 05:06\n\nDoxyfile\n\nRemove exclusion from Doxyfile (#2741)\n\nMarch 2, 2023 04:48\n\nINSTALL.md\n\nAdded version to nighly install (#2982)\n\nAugust 1, 2023 12:14\n\nLICENSE\n\nFacebook sync (May 2019) + relicense (#838)\n\nMay 28, 2019 16:17\n\nREADME.md\n\nComplete Faiss OSS legal requirements\n\nFebruary 6, 2023 12:39\n\nView code\n\nFaiss News Introduction Installing How Faiss works Full documentation of Faiss\nAuthors Reference Join the Faiss community Legal\n\n##  README.md\n\n# Faiss\n\nFaiss is a library for efficient similarity search and clustering of dense\nvectors. It contains algorithms that search in sets of vectors of any size, up\nto ones that possibly do not fit in RAM. It also contains supporting code for\nevaluation and parameter tuning. Faiss is written in C++ with complete\nwrappers for Python/numpy. Some of the most useful algorithms are implemented\non the GPU. It is developed primarily at Meta's Fundamental AI Research group.\n\n## News\n\nSee CHANGELOG.md for detailed information about latest features.\n\n## Introduction\n\nFaiss contains several methods for similarity search. It assumes that the\ninstances are represented as vectors and are identified by an integer, and\nthat the vectors can be compared with L2 (Euclidean) distances or dot\nproducts. Vectors that are similar to a query vector are those that have the\nlowest L2 distance or the highest dot product with the query vector. It also\nsupports cosine similarity, since this is a dot product on normalized vectors.\n\nSome of the methods, like those based on binary vectors and compact\nquantization codes, solely use a compressed representation of the vectors and\ndo not require to keep the original vectors. This generally comes at the cost\nof a less precise search but these methods can scale to billions of vectors in\nmain memory on a single server. Other methods, like HNSW and NSG add an\nindexing structure on top of the raw vectors to make searching more efficient.\n\nThe GPU implementation can accept input from either CPU or GPU memory. On a\nserver with GPUs, the GPU indexes can be used a drop-in replacement for the\nCPU indexes (e.g., replace `IndexFlatL2` with `GpuIndexFlatL2`) and copies\nto/from GPU memory are handled automatically. Results will be faster however\nif both input and output remain resident on the GPU. Both single and multi-GPU\nusage is supported.\n\n## Installing\n\nFaiss comes with precompiled libraries for Anaconda in Python, see faiss-cpu\nand faiss-gpu. The library is mostly implemented in C++, the only dependency\nis a BLAS implementation. Optional GPU support is provided via CUDA, and the\nPython interface is also optional. It compiles with cmake. See INSTALL.md for\ndetails.\n\n## How Faiss works\n\nFaiss is built around an index type that stores a set of vectors, and provides\na function to search in them with L2 and/or dot product vector comparison.\nSome index types are simple baselines, such as exact search. Most of the\navailable indexing structures correspond to various trade-offs with respect to\n\n  * search time\n  * search quality\n  * memory used per index vector\n  * training time\n  * adding time\n  * need for external data for unsupervised training\n\nThe optional GPU implementation provides what is likely (as of March 2017) the\nfastest exact and approximate (compressed-domain) nearest neighbor search\nimplementation for high-dimensional vectors, fastest Lloyd's k-means, and\nfastest small k-selection algorithm known. The implementation is detailed\nhere.\n\n## Full documentation of Faiss\n\nThe following are entry points for documentation:\n\n  * the full documentation can be found on the wiki page, including a tutorial, a FAQ and a troubleshooting section\n  * the doxygen documentation gives per-class information extracted from code comments\n  * to reproduce results from our research papers, Polysemous codes and Billion-scale similarity search with GPUs, refer to the benchmarks README. For  Link and code: Fast indexing with graphs and compact regression codes, see the link_and_code README\n\n## Authors\n\nThe main authors of Faiss are:\n\n  * Herv\u00e9 J\u00e9gou initiated the Faiss project and wrote its first implementation\n  * Matthijs Douze implemented most of the CPU Faiss\n  * Jeff Johnson implemented all of the GPU Faiss\n  * Lucas Hosseini implemented the binary indexes and the build system\n  * Chengqi Deng implemented NSG, NNdescent and much of the additive quantization code.\n  * Alexandr Guzhva many optimizations: SIMD, memory allocation and layout, fast decoding kernels for vector codecs, etc.\n\n## Reference\n\nReference to cite when you use Faiss in a research paper:\n\n    \n    \n    @article{johnson2019billion,\n      title={Billion-scale similarity search with {GPUs}},\n      author={Johnson, Jeff and Douze, Matthijs and J{\\'e}gou, Herv{\\'e}},\n      journal={IEEE Transactions on Big Data},\n      volume={7},\n      number={3},\n      pages={535--547},\n      year={2019},\n      publisher={IEEE}\n    }\n    \n\n## Join the Faiss community\n\nFor public discussion of Faiss or for questions, there is a Facebook group at\nhttps://www.facebook.com/groups/faissusers/\n\nWe monitor the issues page of the repository. You can report bugs, ask\nquestions, etc.\n\n## Legal\n\nFaiss is MIT-licensed, refer to the LICENSE file in the top level directory.\n\nCopyright \u00a9 Meta Platforms, Inc. See the Terms of Use and Privacy Policy for\nthis project.\n\n## About\n\nA library for efficient similarity search and clustering of dense vectors.\n\nfaiss.ai\n\n### Resources\n\nReadme\n\n### License\n\nMIT license\n\n### Code of conduct\n\nCode of conduct\n\n### Security policy\n\nSecurity policy\n\nActivity\n\n### Stars\n\n**25.1k** stars\n\n### Watchers\n\n**468** watching\n\n### Forks\n\n**3.2k** forks\n\nReport repository\n\n##  Releases 15\n\nv1.7.4 Latest\n\nApr 20, 2023\n\n\\+ 14 releases\n\n##  Packages 0\n\nNo packages published  \n\n##  Used by 3.2k\n\n  *   *   *   *   *   *   *   * \n\\+ 3,173\n\n##  Contributors 120\n\n  *   *   *   *   *   *   *   *   *   *   * \n\n\\+ 109 contributors\n\n## Languages\n\n  * C++ 60.9%\n  * Python 18.5%\n  * Cuda 17.1%\n  * C 2.0%\n  * CMake 0.9%\n  * Shell 0.6%\n\n## Footer\n\n\u00a9 2023 GitHub, Inc.\n\n### Footer navigation\n\n  * Terms\n  * Privacy\n  * Security\n  * Status\n  * Docs\n  * Contact GitHub\n  * Pricing\n  * API\n  * Training\n  * Blog\n  * About\n\nYou can\u2019t perform that action at this time.\n\n"
}