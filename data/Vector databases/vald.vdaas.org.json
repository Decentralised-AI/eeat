{
    "summary": "  * About\n  * Get Started\n  * SDKs\n  * Docs\n  * Blog  \n\n  * v1.7.8v1.7.8 v1.7 v1.6 v1.5 v1.4 v1.3 v1.2 v1.1 v1.0\n  * \n\nVald\n\nA Highly Scalable Distributed Vector Search Engine\n\nGet Started Documents Vald Slack\n\n## What is Vald\n\nVald is a highly scalable distributed fast approximate nearest neighbor dense\nvector search engine.\n\nVald is designed and implemented based on the Cloud-Native architecture. It\nuses the fastest ANN Algorithm NGT to search neighbors. Vald has automatic\nvector indexing and index backup, and horizontal scaling which made for\nsearching from billions of feature vector data. Vald is easy to use, feature-\nrich and highly customizable as you needed.\n\n## Vald's Main Features\n\n  * ### Asynchronize Auto Indexing\n\nUsually the graph requires locking during indexing, which cause stop-the-\nworld. But Vald uses distributed index graph so it continues to work during\nindexing.\n\n  * ### Customizable Ingress/Egress Filtering\n\nVald implements it's own highly customizable Ingress/Egress filter. Which can\nbe configured to fit the gRPC interface.\n\n  * ### Cloud-native based vector searching engine\n\nHorizontal scalable on memory and cpu for your demand.\n\n  * ### Auto Indexing Backup\n\nVald supports to auto backup feature using Object Storage or Persistent Volume\nwhich enables disaster recovery.\n\n  * ### Distributed Indexing\n\nVald distribute vector index to multiple agent, each agent stores different\nindex.\n\n  * ### Index Replication\n\nVald stores each index in multiple agents which enables index replicas.\nAutomatically rebalance the replica when some Vald agent goes down.\n\n  * ### Easy to use\n\nVald can be easily installed in a few steps.\n\n  * ### Highly customizable\n\nYou can configure the number of vector dimension, the number of replica and\netc.\n\n  * ### Multi language supported\n\nGolang, Java, Nodejs and python is supported.\n\n## Base Technologies\n\n  *   *   *   *   * \n\n## SDKs\n\n  *   *   *   *   * \n\n## Vald Users\n\n  *   * \n\n## Recommended Docs\n\n  * Vald Architecture\n    The architecture design of Vald and core concept\n  * Usage-example\n    Introducing the usage example using Vald for some situation\n  * Configurations\n    The best practice about how to configure Vald Helm Chart\n\n  * About  \n\n  * Get Started  \n\n  * SDKs\n  * Docs\n  * Blog  \n\n  * \n\n\u00a92019-2023 vald.vdaas.org Vald team\n\n"
}